<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Hzdtf.Service.Impl.Standard</name>
    </assembly>
    <members>
        <member name="T:Hzdtf.Service.Impl.Standard.BasicServiceBase">
            <summary>
            基本服务基类
            @ 黄振东
            </summary>
        </member>
        <member name="P:Hzdtf.Service.Impl.Standard.BasicServiceBase.Log">
            <summary>
            日志
            </summary>
        </member>
        <member name="P:Hzdtf.Service.Impl.Standard.BasicServiceBase.AppConfig">
            <summary>
            应用配置
            </summary>
        </member>
        <member name="T:Hzdtf.Service.Impl.Standard.ServiceBase`3">
            <summary>
            服务基类
            @ 黄振东
            </summary>
            <typeparam name="IdT">ID类型</typeparam>
            <typeparam name="ModelT">模型类型</typeparam>
            <typeparam name="PersistenceT">持久化类型</typeparam>
            <summary>
            服务基类
            @ 黄振东
            </summary>
        </member>
        <member name="P:Hzdtf.Service.Impl.Standard.ServiceBase`3.Persistence">
            <summary>
            持久化
            </summary>
        </member>
        <member name="P:Hzdtf.Service.Impl.Standard.ServiceBase`3.Identity">
            <summary>
            ID
            </summary>
        </member>
        <member name="M:Hzdtf.Service.Impl.Standard.ServiceBase`3.Get">
            <summary>
            获取对象
            </summary>
            <returns>对象</returns>
        </member>
        <member name="E:Hzdtf.Service.Impl.Standard.ServiceBase`3.Finding">
            <summary>
            根据ID查找模型前事件
            </summary>
        </member>
        <member name="M:Hzdtf.Service.Impl.Standard.ServiceBase`3.OnFinding(Hzdtf.Utility.Standard.Model.Return.ReturnInfo{`1},`0,System.String,Hzdtf.Utility.Standard.Model.BasicUserInfo{`0})">
            <summary>
            执行根据ID查找模型前事件
            </summary>
            <param name="returnInfo">返回信息</param>
            <param name="id">ID</param>
            <param name="connectionId">连接ID</param>
            <param name="currUser">当前用户</param>
        </member>
        <member name="E:Hzdtf.Service.Impl.Standard.ServiceBase`3.Finded">
            <summary>
            根据ID查找模型后事件
            </summary>
        </member>
        <member name="M:Hzdtf.Service.Impl.Standard.ServiceBase`3.OnFinded(Hzdtf.Utility.Standard.Model.Return.ReturnInfo{`1},`0,System.String,Hzdtf.Utility.Standard.Model.BasicUserInfo{`0})">
            <summary>
            执行根据ID查找模型后事件
            </summary>
            <param name="returnInfo">返回信息</param>
            <param name="id">ID</param>
            <param name="connectionId">连接ID</param>
            <param name="currUser">当前用户</param>
        </member>
        <member name="M:Hzdtf.Service.Impl.Standard.ServiceBase`3.Find(`0,System.String,Hzdtf.Utility.Standard.Model.BasicUserInfo{`0})">
            <summary>
            根据ID查找模型
            </summary>
            <param name="id">ID</param>
            <param name="connectionId">连接ID</param>
            <param name="currUser">当前用户</param>
            <returns>返回信息</returns>
        </member>
        <member name="E:Hzdtf.Service.Impl.Standard.ServiceBase`3.Findsing">
            <summary>
            根据ID查找模型列表前事件
            </summary>
        </member>
        <member name="M:Hzdtf.Service.Impl.Standard.ServiceBase`3.OnFindsing(Hzdtf.Utility.Standard.Model.Return.ReturnInfo{System.Collections.Generic.IList{`1}},`0[],System.String,Hzdtf.Utility.Standard.Model.BasicUserInfo{`0})">
            <summary>
            执行根据ID查找模型前事件
            </summary>
            <param name="returnInfo">返回信息</param>
            <param name="ids">ID集合</param>
            <param name="connectionId">连接ID</param>
            <param name="currUser">当前用户</param>
        </member>
        <member name="E:Hzdtf.Service.Impl.Standard.ServiceBase`3.Findsed">
            <summary>
            根据ID查找模型列表后事件
            </summary>
        </member>
        <member name="M:Hzdtf.Service.Impl.Standard.ServiceBase`3.OnFindsed(Hzdtf.Utility.Standard.Model.Return.ReturnInfo{System.Collections.Generic.IList{`1}},`0[],System.String,Hzdtf.Utility.Standard.Model.BasicUserInfo{`0})">
            <summary>
            执行根据ID查找模型后事件
            </summary>
            <param name="returnInfo">返回信息</param>
            <param name="ids">ID集合</param>
            <param name="connectionId">连接ID</param>
            <param name="currUser">当前用户</param>
        </member>
        <member name="M:Hzdtf.Service.Impl.Standard.ServiceBase`3.Find(`0[],System.String,Hzdtf.Utility.Standard.Model.BasicUserInfo{`0})">
            <summary>
            根据ID查找模型列表
            </summary>
            <param name="ids">ID集合</param>
            <param name="connectionId">连接ID</param>
            <param name="currUser">当前用户</param>
            <returns>返回信息</returns>
        </member>
        <member name="E:Hzdtf.Service.Impl.Standard.ServiceBase`3.Existsing">
            <summary>
            根据ID判断模型是否存在前事件
            </summary>
        </member>
        <member name="M:Hzdtf.Service.Impl.Standard.ServiceBase`3.OnExistsing(Hzdtf.Utility.Standard.Model.Return.ReturnInfo{System.Boolean},`0,System.String,Hzdtf.Utility.Standard.Model.BasicUserInfo{`0})">
            <summary>
            执行根据ID判断模型是否存在前事件
            </summary>
            <param name="returnInfo">返回信息</param>
            <param name="id">ID</param>
            <param name="connectionId">连接ID</param>
            <param name="currUser">当前用户</param>
        </member>
        <member name="E:Hzdtf.Service.Impl.Standard.ServiceBase`3.Existsed">
            <summary>
            根据ID判断模型是否存在后事件
            </summary>
        </member>
        <member name="M:Hzdtf.Service.Impl.Standard.ServiceBase`3.OnExistsed(Hzdtf.Utility.Standard.Model.Return.ReturnInfo{System.Boolean},`0,System.String,Hzdtf.Utility.Standard.Model.BasicUserInfo{`0})">
            <summary>
            执行根据ID判断模型是否存在后事件
            </summary>
            <param name="returnInfo">返回信息</param>
            <param name="id">ID</param>
            <param name="connectionId">连接ID</param>
            <param name="currUser">当前用户</param>
        </member>
        <member name="M:Hzdtf.Service.Impl.Standard.ServiceBase`3.Exists(`0,System.String,Hzdtf.Utility.Standard.Model.BasicUserInfo{`0})">
            <summary>
            根据ID判断模型是否存在
            </summary>
            <param name="id">ID</param>
            <param name="connectionId">连接ID</param>
            <param name="currUser">当前用户</param>
            <returns>返回信息</returns>
        </member>
        <member name="E:Hzdtf.Service.Impl.Standard.ServiceBase`3.Counting">
            <summary>
            统计模型数前事件
            </summary>
        </member>
        <member name="M:Hzdtf.Service.Impl.Standard.ServiceBase`3.OnCounting(Hzdtf.Utility.Standard.Model.Return.ReturnInfo{System.Int32},System.String,Hzdtf.Utility.Standard.Model.BasicUserInfo{`0})">
            <summary>
            执行统计模型数前事件
            </summary>
            <param name="returnInfo">返回信息</param>
            <param name="connectionId">连接ID</param>
            <param name="currUser">当前用户</param>
        </member>
        <member name="E:Hzdtf.Service.Impl.Standard.ServiceBase`3.Counted">
            <summary>
            统计模型数后事件
            </summary>
        </member>
        <member name="M:Hzdtf.Service.Impl.Standard.ServiceBase`3.OnCounted(Hzdtf.Utility.Standard.Model.Return.ReturnInfo{System.Int32},System.String,Hzdtf.Utility.Standard.Model.BasicUserInfo{`0})">
            <summary>
            执行统计模型数后事件
            </summary>
            <param name="returnInfo">返回信息</param>
            <param name="connectionId">连接ID</param>
            <param name="currUser">当前用户</param>
        </member>
        <member name="M:Hzdtf.Service.Impl.Standard.ServiceBase`3.Count(System.String,Hzdtf.Utility.Standard.Model.BasicUserInfo{`0})">
            <summary>
            统计模型数
            </summary>
            <param name="connectionId">连接ID</param>
            <param name="currUser">当前用户</param>
            <returns>返回信息</returns>
        </member>
        <member name="E:Hzdtf.Service.Impl.Standard.ServiceBase`3.Querying">
            <summary>
            查询模型列表前事件
            </summary>
        </member>
        <member name="M:Hzdtf.Service.Impl.Standard.ServiceBase`3.OnQuerying(Hzdtf.Utility.Standard.Model.Return.ReturnInfo{System.Collections.Generic.IList{`1}},System.String,Hzdtf.Utility.Standard.Model.BasicUserInfo{`0})">
            <summary>
            执行查询模型列表前事件
            </summary>
            <param name="returnInfo">返回信息</param>
            <param name="connectionId">连接ID</param>
            <param name="currUser">当前用户</param>
        </member>
        <member name="E:Hzdtf.Service.Impl.Standard.ServiceBase`3.Queryed">
            <summary>
            查询模型列表后事件
            </summary>
        </member>
        <member name="M:Hzdtf.Service.Impl.Standard.ServiceBase`3.OnQueryed(Hzdtf.Utility.Standard.Model.Return.ReturnInfo{System.Collections.Generic.IList{`1}},System.String,Hzdtf.Utility.Standard.Model.BasicUserInfo{`0})">
            <summary>
            执行查询模型列表后事件
            </summary>
            <param name="returnInfo">返回信息</param>
            <param name="connectionId">连接ID</param>
            <param name="currUser">当前用户</param>
        </member>
        <member name="M:Hzdtf.Service.Impl.Standard.ServiceBase`3.Query(System.String,Hzdtf.Utility.Standard.Model.BasicUserInfo{`0})">
            <summary>
            查询模型列表
            </summary>
            <param name="connectionId">连接ID</param>
            <param name="currUser">当前用户</param>
            <returns>返回信息</returns>
        </member>
        <member name="E:Hzdtf.Service.Impl.Standard.ServiceBase`3.QueryPaging">
            <summary>
            查询模型列表并分页前事件
            </summary>
        </member>
        <member name="M:Hzdtf.Service.Impl.Standard.ServiceBase`3.OnQueryPaging(Hzdtf.Utility.Standard.Model.Return.ReturnInfo{Hzdtf.Utility.Standard.Model.Page.PagingInfo{`1}},System.Int32,System.Int32,Hzdtf.Utility.Standard.Model.FilterInfo,System.String,Hzdtf.Utility.Standard.Model.BasicUserInfo{`0})">
            <summary>
            执行查询模型列表并分页前事件
            </summary>
            <param name="returnInfo">返回信息</param>
            <param name="pageIndex">页码</param>
            <param name="pageSize">每页记录数</param>
            <param name="filter">筛选</param>
            <param name="connectionId">连接ID</param>
            <param name="currUser">当前用户</param>
        </member>
        <member name="E:Hzdtf.Service.Impl.Standard.ServiceBase`3.QueryPaged">
            <summary>
            查询模型列表并分页后事件
            </summary>
        </member>
        <member name="M:Hzdtf.Service.Impl.Standard.ServiceBase`3.OnQueryPaged(Hzdtf.Utility.Standard.Model.Return.ReturnInfo{Hzdtf.Utility.Standard.Model.Page.PagingInfo{`1}},System.Int32,System.Int32,Hzdtf.Utility.Standard.Model.FilterInfo,System.String,Hzdtf.Utility.Standard.Model.BasicUserInfo{`0})">
            <summary>
            执行查询模型列表并分页后事件
            </summary>
            <param name="returnInfo">返回信息</param>
            <param name="pageIndex">页码</param>
            <param name="pageSize">每页记录数</param>
            <param name="filter">筛选</param>
            <param name="connectionId">连接ID</param>
            <param name="currUser">当前用户</param>
        </member>
        <member name="M:Hzdtf.Service.Impl.Standard.ServiceBase`3.QueryPage(System.Int32,System.Int32,Hzdtf.Utility.Standard.Model.FilterInfo,System.String,Hzdtf.Utility.Standard.Model.BasicUserInfo{`0})">
            <summary>
            查询模型列表并分页
            </summary>
            <param name="pageIndex">页码</param>
            <param name="pageSize">每页记录数</param>
            <param name="filter">筛选</param>
            <param name="connectionId">连接ID</param>
            <param name="currUser">当前用户</param>
            <returns>返回信息</returns>
        </member>
        <member name="E:Hzdtf.Service.Impl.Standard.ServiceBase`3.Adding">
            <summary>
            添加模型前事件
            </summary>
        </member>
        <member name="M:Hzdtf.Service.Impl.Standard.ServiceBase`3.OnAdding(Hzdtf.Utility.Standard.Model.Return.ReturnInfo{System.Boolean},`1,System.String,Hzdtf.Utility.Standard.Model.BasicUserInfo{`0})">
            <summary>
            执行模型前事件
            </summary>
            <param name="returnInfo">返回信息</param>
            <param name="model">模型</param>
            <param name="connectionId">连接ID</param>
            <param name="currUser">当前用户</param>
        </member>
        <member name="E:Hzdtf.Service.Impl.Standard.ServiceBase`3.Added">
            <summary>
            添加模型后事件
            </summary>
        </member>
        <member name="M:Hzdtf.Service.Impl.Standard.ServiceBase`3.OnAdded(Hzdtf.Utility.Standard.Model.Return.ReturnInfo{System.Boolean},`1,System.String,Hzdtf.Utility.Standard.Model.BasicUserInfo{`0})">
            <summary>
            执行模型后事件
            </summary>
            <param name="returnInfo">返回信息</param>
            <param name="model">模型</param>
            <param name="connectionId">连接ID</param>
            <param name="currUser">当前用户</param>
        </member>
        <member name="M:Hzdtf.Service.Impl.Standard.ServiceBase`3.Add(`1,System.String,Hzdtf.Utility.Standard.Model.BasicUserInfo{`0})">
            <summary>
            添加模型
            </summary>
            <param name="model">模型</param>
            <param name="connectionId">连接ID</param>
            <param name="currUser">当前用户</param>
            <returns>返回信息</returns>
        </member>
        <member name="E:Hzdtf.Service.Impl.Standard.ServiceBase`3.Addsing">
            <summary>
            添加模型列表前事件
            </summary>
        </member>
        <member name="M:Hzdtf.Service.Impl.Standard.ServiceBase`3.OnAddsing(Hzdtf.Utility.Standard.Model.Return.ReturnInfo{System.Boolean},System.Collections.Generic.IList{`1},System.String,Hzdtf.Utility.Standard.Model.BasicUserInfo{`0})">
            <summary>
            执行模型列表前事件
            </summary>
            <param name="returnInfo">返回信息</param>
            <param name="models">模型列表</param>
            <param name="connectionId">连接ID</param>
            <param name="currUser">当前用户</param>
        </member>
        <member name="E:Hzdtf.Service.Impl.Standard.ServiceBase`3.Addsed">
            <summary>
            添加模型列表后事件
            </summary>
        </member>
        <member name="M:Hzdtf.Service.Impl.Standard.ServiceBase`3.OnAddsed(Hzdtf.Utility.Standard.Model.Return.ReturnInfo{System.Boolean},System.Collections.Generic.IList{`1},System.String,Hzdtf.Utility.Standard.Model.BasicUserInfo{`0})">
            <summary>
            执行模型列表后事件
            </summary>
            <param name="returnInfo">返回信息</param>
            <param name="models">模型列表</param>
            <param name="connectionId">连接ID</param>
            <param name="currUser">当前用户</param>
        </member>
        <member name="M:Hzdtf.Service.Impl.Standard.ServiceBase`3.Add(System.Collections.Generic.IList{`1},System.String,Hzdtf.Utility.Standard.Model.BasicUserInfo{`0})">
            <summary>
            添加模型列表
            </summary>
            <param name="models">模型列表</param>
            <param name="connectionId">连接ID</param>
            <param name="currUser">当前用户</param>
            <returns>返回信息</returns>
        </member>
        <member name="E:Hzdtf.Service.Impl.Standard.ServiceBase`3.Seting">
            <summary>
            设置模型前事件
            </summary>
        </member>
        <member name="M:Hzdtf.Service.Impl.Standard.ServiceBase`3.OnSeting(Hzdtf.Utility.Standard.Model.Return.ReturnInfo{System.Boolean},`1,System.String,Hzdtf.Utility.Standard.Model.BasicUserInfo{`0})">
            <summary>
            执行设置模型前事件
            </summary>
            <param name="returnInfo">返回信息</param>
            <param name="model">模型</param>
            <param name="connectionId">连接ID</param>
            <param name="currUser">当前用户</param>
        </member>
        <member name="E:Hzdtf.Service.Impl.Standard.ServiceBase`3.Seted">
            <summary>
            设置模型后事件
            </summary>
        </member>
        <member name="M:Hzdtf.Service.Impl.Standard.ServiceBase`3.OnSeted(Hzdtf.Utility.Standard.Model.Return.ReturnInfo{System.Boolean},`1,System.String,Hzdtf.Utility.Standard.Model.BasicUserInfo{`0})">
            <summary>
            执行设置模型后事件
            </summary>
            <param name="returnInfo">返回信息</param>
            <param name="model">模型</param>
            <param name="connectionId">连接ID</param>
            <param name="currUser">当前用户</param>
        </member>
        <member name="M:Hzdtf.Service.Impl.Standard.ServiceBase`3.Set(`1,System.String,Hzdtf.Utility.Standard.Model.BasicUserInfo{`0})">
            <summary>
            设置模型
            如果ID存在则修改，否则添加
            </summary>
            <param name="model">模型</param>
            <param name="connectionId">连接ID</param>
            <param name="currUser">当前用户</param>
            <returns>返回信息</returns>
        </member>
        <member name="E:Hzdtf.Service.Impl.Standard.ServiceBase`3.ModifyByIding">
            <summary>
            根据ID修改模型前事件
            </summary>
        </member>
        <member name="M:Hzdtf.Service.Impl.Standard.ServiceBase`3.OnModifyByIding(Hzdtf.Utility.Standard.Model.Return.ReturnInfo{System.Boolean},`1,System.String,Hzdtf.Utility.Standard.Model.BasicUserInfo{`0})">
            <summary>
            执行根据ID修改模型前事件
            </summary>
            <param name="returnInfo">返回信息</param>
            <param name="model">模型</param>
            <param name="connectionId">连接ID</param>
            <param name="currUser">当前用户</param>
        </member>
        <member name="E:Hzdtf.Service.Impl.Standard.ServiceBase`3.ModifyByIded">
            <summary>
            根据ID修改模型后事件
            </summary>
        </member>
        <member name="M:Hzdtf.Service.Impl.Standard.ServiceBase`3.OnModifyByIded(Hzdtf.Utility.Standard.Model.Return.ReturnInfo{System.Boolean},`1,System.String,Hzdtf.Utility.Standard.Model.BasicUserInfo{`0})">
            <summary>
            执行根据ID修改模型后事件
            </summary>
            <param name="returnInfo">返回信息</param>
            <param name="model">模型</param>
            <param name="connectionId">连接ID</param>
            <param name="currUser">当前用户</param>
        </member>
        <member name="M:Hzdtf.Service.Impl.Standard.ServiceBase`3.ModifyById(`1,System.String,Hzdtf.Utility.Standard.Model.BasicUserInfo{`0})">
            <summary>
            根据ID修改模型
            </summary>
            <param name="model">模型</param>
            <param name="connectionId">连接ID</param>
            <param name="currUser">当前用户</param>
            <returns>返回信息</returns>
        </member>
        <member name="E:Hzdtf.Service.Impl.Standard.ServiceBase`3.RemoveByIding">
            <summary>
            根据ID移除模型前事件
            </summary>
        </member>
        <member name="M:Hzdtf.Service.Impl.Standard.ServiceBase`3.OnRemoveByIding(Hzdtf.Utility.Standard.Model.Return.ReturnInfo{System.Boolean},`0,System.String,Hzdtf.Utility.Standard.Model.BasicUserInfo{`0})">
            <summary>
            执行根据ID移除模型前事件
            </summary>
            <param name="returnInfo">返回信息</param>
            <param name="id">ID</param>
            <param name="connectionId">连接ID</param>
            <param name="currUser">当前用户</param>
        </member>
        <member name="E:Hzdtf.Service.Impl.Standard.ServiceBase`3.RemoveByIded">
            <summary>
            根据ID移除模型后事件
            </summary>
        </member>
        <member name="M:Hzdtf.Service.Impl.Standard.ServiceBase`3.OnRemoveByIded(Hzdtf.Utility.Standard.Model.Return.ReturnInfo{System.Boolean},`0,System.String,Hzdtf.Utility.Standard.Model.BasicUserInfo{`0})">
            <summary>
            执行根据ID移除模型后事件
            </summary>
            <param name="returnInfo">返回信息</param>
            <param name="id">ID</param>
            <param name="connectionId">连接ID</param>
            <param name="currUser">当前用户</param>
        </member>
        <member name="M:Hzdtf.Service.Impl.Standard.ServiceBase`3.RemoveById(`0,System.String,Hzdtf.Utility.Standard.Model.BasicUserInfo{`0})">
            <summary>
            根据ID移除模型
            </summary>
            <param name="id">ID</param>
            <param name="connectionId">连接ID</param>
            <param name="currUser">当前用户</param>
            <returns>返回信息</returns>
        </member>
        <member name="E:Hzdtf.Service.Impl.Standard.ServiceBase`3.RemoveByIdsing">
            <summary>
            根据ID数组移除模型前事件
            </summary>
        </member>
        <member name="M:Hzdtf.Service.Impl.Standard.ServiceBase`3.OnRemoveByIdsing(Hzdtf.Utility.Standard.Model.Return.ReturnInfo{System.Boolean},`0[],System.String,Hzdtf.Utility.Standard.Model.BasicUserInfo{`0})">
            <summary>
            执行根据ID数组移除模型前事件
            </summary>
            <param name="returnInfo">返回信息</param>
            <param name="ids">ID集合</param>
            <param name="connectionId">连接ID</param>
            <param name="currUser">当前用户</param>
        </member>
        <member name="E:Hzdtf.Service.Impl.Standard.ServiceBase`3.RemoveByIdsed">
            <summary>
            根据ID数组移除模型后事件
            </summary>
        </member>
        <member name="M:Hzdtf.Service.Impl.Standard.ServiceBase`3.OnRemoveByIdsed(Hzdtf.Utility.Standard.Model.Return.ReturnInfo{System.Boolean},`0[],System.String,Hzdtf.Utility.Standard.Model.BasicUserInfo{`0})">
            <summary>
            执行根据ID数组移除模型后事件
            </summary>
            <param name="returnInfo">返回信息</param>
            <param name="ids">ID集合</param>
            <param name="connectionId">连接ID</param>
            <param name="currUser">当前用户</param>
        </member>
        <member name="M:Hzdtf.Service.Impl.Standard.ServiceBase`3.RemoveByIds(`0[],System.String,Hzdtf.Utility.Standard.Model.BasicUserInfo{`0})">
            <summary>
            根据ID数组移除模型
            </summary>
            <param name="ids">ID集合</param>
            <param name="connectionId">连接ID</param>
            <param name="currUser">当前用户</param>
            <returns>返回信息</returns>
        </member>
        <member name="E:Hzdtf.Service.Impl.Standard.ServiceBase`3.Clearing">
            <summary>
            清空所有模型前事件
            </summary>
        </member>
        <member name="M:Hzdtf.Service.Impl.Standard.ServiceBase`3.OnClearing(Hzdtf.Utility.Standard.Model.Return.ReturnInfo{System.Boolean},System.String,Hzdtf.Utility.Standard.Model.BasicUserInfo{`0})">
            <summary>
            执行清空所有模型前事件
            </summary>
            <param name="returnInfo">返回信息</param>
            <param name="connectionId">连接ID</param>
            <param name="currUser">当前用户</param>
        </member>
        <member name="E:Hzdtf.Service.Impl.Standard.ServiceBase`3.Cleared">
            <summary>
            清空所有模型后事件
            </summary>
        </member>
        <member name="M:Hzdtf.Service.Impl.Standard.ServiceBase`3.OnCleared(Hzdtf.Utility.Standard.Model.Return.ReturnInfo{System.Boolean},System.String,Hzdtf.Utility.Standard.Model.BasicUserInfo{`0})">
            <summary>
            执行清空所有模型后事件
            </summary>
            <param name="returnInfo">返回信息</param>
            <param name="connectionId">连接ID</param>
            <param name="currUser">当前用户</param>
        </member>
        <member name="M:Hzdtf.Service.Impl.Standard.ServiceBase`3.Clear(System.String,Hzdtf.Utility.Standard.Model.BasicUserInfo{`0})">
            <summary>
            清空所有模型
            </summary>
            <param name="connectionId">连接ID</param>
            <param name="currUser">当前用户</param>
            <returns>返回信息</returns>
        </member>
        <member name="M:Hzdtf.Service.Impl.Standard.ServiceBase`3.ExecReturnFuncAndConnectionId``1(System.Func{Hzdtf.Utility.Standard.Model.Return.ReturnInfo{``0},System.String,``0},Hzdtf.Utility.Standard.Model.Return.ReturnInfo{``0},System.String,Hzdtf.Utility.Standard.Enums.AccessMode)">
            <summary>
            执行返回函数且带有连接ID
            </summary>
            <typeparam name="OutT">输出类型</typeparam>
            <param name="func">函数</param>
            <param name="returnInfo">返回信息</param>
            <param name="connectionId">连接ID</param>
            <param name="accessMode">访问模式</param>
            <returns>返回信息</returns>
        </member>
        <member name="M:Hzdtf.Service.Impl.Standard.ServiceBase`3.ExecReturnFunc``1(System.Func{Hzdtf.Utility.Standard.Model.Return.ReturnInfo{``0},``0},Hzdtf.Utility.Standard.Model.Return.ReturnInfo{``0})">
            <summary>
            执行返回函数
            </summary>
            <typeparam name="OutT">输出类型</typeparam>
            <param name="func">函数</param>
            <param name="returnInfo">返回信息</param>
            <returns>返回信息</returns>
        </member>
        <member name="M:Hzdtf.Service.Impl.Standard.ServiceBase`3.ExecProcConnectionId(System.Action{System.String},System.String,Hzdtf.Utility.Standard.Enums.AccessMode)">
            <summary>
            执行连接ID过程
            如果传过来的连接ID为空，则会创建新的连接ID，结束后会自动注释连接ID，否则不会
            </summary>
            <param name="action">动作</param>
            <param name="connectionId">连接ID</param>
            <param name="accessMode">访问模式</param>
        </member>
        <member name="M:Hzdtf.Service.Impl.Standard.ServiceBase`3.SetCreateInfo(`1,Hzdtf.Utility.Standard.Model.BasicUserInfo{`0})">
            <summary>
            设置创建信息
            </summary>
            <param name="model">模型</param>
            <param name="currUser">当前用户</param>
        </member>
        <member name="M:Hzdtf.Service.Impl.Standard.ServiceBase`3.SetModifyInfo(`1,Hzdtf.Utility.Standard.Model.BasicUserInfo{`0})">
            <summary>
            设置修改信息
            </summary>
            <param name="model">模型</param>
            <param name="currUser">当前用户</param>
        </member>
        <member name="M:Hzdtf.Service.Impl.Standard.ServiceBase`3.BeforeFind(Hzdtf.Utility.Standard.Model.Return.ReturnInfo{`1},`0,System.String@,Hzdtf.Utility.Standard.Model.BasicUserInfo{`0})">
            <summary>
            根据ID查找模型前
            </summary>
            <param name="returnInfo">返回信息</param>
            <param name="id">ID</param>
            <param name="connectionId">连接ID</param>
            <param name="currUser">当前用户</param>
        </member>
        <member name="M:Hzdtf.Service.Impl.Standard.ServiceBase`3.AfterFind(Hzdtf.Utility.Standard.Model.Return.ReturnInfo{`1},`0,System.String@,Hzdtf.Utility.Standard.Model.BasicUserInfo{`0})">
            <summary>
            根据ID查找模型后
            </summary>
            <param name="returnInfo">返回信息</param>
            <param name="id">ID</param>
            <param name="connectionId">连接ID</param>
            <param name="currUser">当前用户</param>
        </member>
        <member name="M:Hzdtf.Service.Impl.Standard.ServiceBase`3.BeforeFind(Hzdtf.Utility.Standard.Model.Return.ReturnInfo{System.Collections.Generic.IList{`1}},`0[],System.String@,Hzdtf.Utility.Standard.Model.BasicUserInfo{`0})">
            <summary>
            根据ID集合查找模型列表前
            </summary>
            <param name="returnInfo">返回信息</param>
            <param name="ids">ID集合</param>
            <param name="connectionId">连接ID</param>
            <param name="currUser">当前用户</param>
        </member>
        <member name="M:Hzdtf.Service.Impl.Standard.ServiceBase`3.AfterFind(Hzdtf.Utility.Standard.Model.Return.ReturnInfo{System.Collections.Generic.IList{`1}},`0[],System.String@,Hzdtf.Utility.Standard.Model.BasicUserInfo{`0})">
            <summary>
            根据ID集合查找模型列表后
            </summary>
            <param name="returnInfo">返回信息</param>
            <param name="ids">ID集合</param>
            <param name="connectionId">连接ID</param>
            <param name="currUser">当前用户</param>
        </member>
        <member name="M:Hzdtf.Service.Impl.Standard.ServiceBase`3.BeforeExists(Hzdtf.Utility.Standard.Model.Return.ReturnInfo{System.Boolean},`0,System.String@,Hzdtf.Utility.Standard.Model.BasicUserInfo{`0})">
            <summary>
            根据ID判断模型是否存在前
            </summary>
            <param name="returnInfo">返回信息</param>
            <param name="id">ID</param>
            <param name="connectionId">连接ID</param>
            <param name="currUser">当前用户</param>
        </member>
        <member name="M:Hzdtf.Service.Impl.Standard.ServiceBase`3.AfterExists(Hzdtf.Utility.Standard.Model.Return.ReturnInfo{System.Boolean},`0,System.String@,Hzdtf.Utility.Standard.Model.BasicUserInfo{`0})">
            <summary>
            根据ID判断模型是否存在后
            </summary>
            <param name="returnInfo">返回信息</param>
            <param name="id">ID</param>
            <param name="connectionId">连接ID</param>
            <param name="currUser">当前用户</param>
        </member>
        <member name="M:Hzdtf.Service.Impl.Standard.ServiceBase`3.BeforeCount(Hzdtf.Utility.Standard.Model.Return.ReturnInfo{System.Int32},System.String@,Hzdtf.Utility.Standard.Model.BasicUserInfo{`0})">
            <summary>
            统计模型数前
            </summary>
            <param name="returnInfo">返回信息</param>
            <param name="connectionId">连接ID</param>
            <param name="currUser">当前用户</param>
            <returns>返回信息</returns>
        </member>
        <member name="M:Hzdtf.Service.Impl.Standard.ServiceBase`3.AfterCount(Hzdtf.Utility.Standard.Model.Return.ReturnInfo{System.Int32},System.String@,Hzdtf.Utility.Standard.Model.BasicUserInfo{`0})">
            <summary>
            统计模型数后
            </summary>
            <param name="returnInfo">返回信息</param>
            <param name="connectionId">连接ID</param>
            <param name="currUser">当前用户</param>
        </member>
        <member name="M:Hzdtf.Service.Impl.Standard.ServiceBase`3.BeforeQuery(Hzdtf.Utility.Standard.Model.Return.ReturnInfo{System.Collections.Generic.IList{`1}},System.String@,Hzdtf.Utility.Standard.Model.BasicUserInfo{`0})">
            <summary>
            查询模型列表前
            </summary>
            <param name="returnInfo">返回信息</param>
            <param name="connectionId">连接ID</param>
            <param name="currUser">当前用户</param>
        </member>
        <member name="M:Hzdtf.Service.Impl.Standard.ServiceBase`3.AfterQuery(Hzdtf.Utility.Standard.Model.Return.ReturnInfo{System.Collections.Generic.IList{`1}},System.String@,Hzdtf.Utility.Standard.Model.BasicUserInfo{`0})">
            <summary>
            查询模型列表后
            </summary>
            <param name="returnInfo">返回信息</param>
            <param name="connectionId">连接ID</param>
            <param name="currUser">当前用户</param>
        </member>
        <member name="M:Hzdtf.Service.Impl.Standard.ServiceBase`3.BeforeQueryPage(Hzdtf.Utility.Standard.Model.Return.ReturnInfo{Hzdtf.Utility.Standard.Model.Page.PagingInfo{`1}},System.Int32,System.Int32,System.String@,Hzdtf.Utility.Standard.Model.FilterInfo,Hzdtf.Utility.Standard.Model.BasicUserInfo{`0})">
            <summary>
            执行查询模型列表并分页前
            </summary>
            <param name="returnInfo">返回信息</param>
            <param name="pageIndex">页码</param>
            <param name="pageSize">每页记录数</param>
            <param name="connectionId">连接ID</param>
            <param name="filter">筛选</param>
            <param name="currUser">当前用户</param>
        </member>
        <member name="M:Hzdtf.Service.Impl.Standard.ServiceBase`3.AfterQueryPage(Hzdtf.Utility.Standard.Model.Return.ReturnInfo{Hzdtf.Utility.Standard.Model.Page.PagingInfo{`1}},System.Int32,System.Int32,System.String@,Hzdtf.Utility.Standard.Model.FilterInfo,Hzdtf.Utility.Standard.Model.BasicUserInfo{`0})">
            <summary>
            执行查询模型列表并分页后
            </summary>
            <param name="returnInfo">返回信息</param>
            <param name="pageIndex">页码</param>
            <param name="pageSize">每页记录数</param>
            <param name="connectionId">连接ID</param>
            <param name="filter">筛选</param>
            <param name="currUser">当前用户</param>
        </member>
        <member name="M:Hzdtf.Service.Impl.Standard.ServiceBase`3.BeforeAdd(Hzdtf.Utility.Standard.Model.Return.ReturnInfo{System.Boolean},`1,System.String@,Hzdtf.Utility.Standard.Model.BasicUserInfo{`0})">
            <summary>
            添加模型前
            </summary>
            <param name="returnInfo">返回信息</param>
            <param name="model">模型</param>
            <param name="connectionId">连接ID</param>
            <param name="currUser">当前用户</param>
        </member>
        <member name="M:Hzdtf.Service.Impl.Standard.ServiceBase`3.AfterAdd(Hzdtf.Utility.Standard.Model.Return.ReturnInfo{System.Boolean},`1,System.String@,Hzdtf.Utility.Standard.Model.BasicUserInfo{`0})">
            <summary>
            添加模型后
            </summary>
            <param name="returnInfo">返回信息</param>
            <param name="model">模型</param>
            <param name="connectionId">连接ID</param>
            <param name="currUser">当前用户</param>
        </member>
        <member name="M:Hzdtf.Service.Impl.Standard.ServiceBase`3.BeforeAdd(Hzdtf.Utility.Standard.Model.Return.ReturnInfo{System.Boolean},System.Collections.Generic.IList{`1},System.String@,Hzdtf.Utility.Standard.Model.BasicUserInfo{`0})">
            <summary>
            添加模型列表前
            </summary>
            <param name="returnInfo">返回信息</param>
            <param name="models">模型列表</param>
            <param name="connectionId">连接ID</param>
            <param name="currUser">当前用户</param>
        </member>
        <member name="M:Hzdtf.Service.Impl.Standard.ServiceBase`3.AfterAdd(Hzdtf.Utility.Standard.Model.Return.ReturnInfo{System.Boolean},System.Collections.Generic.IList{`1},System.String@,Hzdtf.Utility.Standard.Model.BasicUserInfo{`0})">
            <summary>
            添加模型列表后
            </summary>
            <param name="returnInfo">返回信息</param>
            <param name="models">模型列表</param>
            <param name="connectionId">连接ID</param>
            <param name="currUser">当前用户</param>
        </member>
        <member name="M:Hzdtf.Service.Impl.Standard.ServiceBase`3.BeforeSet(Hzdtf.Utility.Standard.Model.Return.ReturnInfo{System.Boolean},`1,System.String@,Hzdtf.Utility.Standard.Model.BasicUserInfo{`0})">
            <summary>
            设置模型前
            </summary>
            <param name="returnInfo">返回信息</param>
            <param name="model">模型</param>
            <param name="connectionId">连接ID</param>
            <param name="currUser">当前用户</param>
        </member>
        <member name="M:Hzdtf.Service.Impl.Standard.ServiceBase`3.AfterSet(Hzdtf.Utility.Standard.Model.Return.ReturnInfo{System.Boolean},`1,System.String@,Hzdtf.Utility.Standard.Model.BasicUserInfo{`0})">
            <summary>
            设置模型后
            </summary>
            <param name="returnInfo">返回信息</param>
            <param name="model">模型</param>
            <param name="connectionId">连接ID</param>
            <param name="currUser">当前用户</param>
        </member>
        <member name="M:Hzdtf.Service.Impl.Standard.ServiceBase`3.BeforeModifyById(Hzdtf.Utility.Standard.Model.Return.ReturnInfo{System.Boolean},`1,System.String@,Hzdtf.Utility.Standard.Model.BasicUserInfo{`0})">
            <summary>
            根据ID修改模型前
            </summary>
            <param name="returnInfo">返回信息</param>
            <param name="model">模型</param>
            <param name="connectionId">连接ID</param>
            <param name="currUser">当前用户</param>
        </member>
        <member name="M:Hzdtf.Service.Impl.Standard.ServiceBase`3.AfterModifyById(Hzdtf.Utility.Standard.Model.Return.ReturnInfo{System.Boolean},`1,System.String@,Hzdtf.Utility.Standard.Model.BasicUserInfo{`0})">
            <summary>
            根据ID修改模型后
            </summary>
            <param name="returnInfo">返回信息</param>
            <param name="model">模型</param>
            <param name="connectionId">连接ID</param>
            <param name="currUser">当前用户</param>
        </member>
        <member name="M:Hzdtf.Service.Impl.Standard.ServiceBase`3.BeforeRemoveById(Hzdtf.Utility.Standard.Model.Return.ReturnInfo{System.Boolean},`0,System.String@,Hzdtf.Utility.Standard.Model.BasicUserInfo{`0})">
            <summary>
            根据ID移除模型前
            </summary>
            <param name="returnInfo">返回信息</param>
            <param name="id">ID</param>
            <param name="connectionId">连接ID</param>
            <param name="currUser">当前用户</param>
            <returns>返回信息</returns>
        </member>
        <member name="M:Hzdtf.Service.Impl.Standard.ServiceBase`3.AfterRemoveById(Hzdtf.Utility.Standard.Model.Return.ReturnInfo{System.Boolean},`0,System.String@,Hzdtf.Utility.Standard.Model.BasicUserInfo{`0})">
            <summary>
            根据ID移除模型后
            </summary>
            <param name="returnInfo">返回信息</param>
            <param name="id">ID</param>
            <param name="connectionId">连接ID</param>
            <param name="currUser">当前用户</param>
            <returns>返回信息</returns>
        </member>
        <member name="M:Hzdtf.Service.Impl.Standard.ServiceBase`3.BeforeRemoveByIds(Hzdtf.Utility.Standard.Model.Return.ReturnInfo{System.Boolean},`0[],System.String@,Hzdtf.Utility.Standard.Model.BasicUserInfo{`0})">
            <summary>
            根据ID集合移除模型前
            </summary>
            <param name="returnInfo">返回信息</param>
            <param name="ids">ID集合</param>
            <param name="connectionId">连接ID</param>
            <param name="currUser">当前用户</param>
            <returns>返回信息</returns>
        </member>
        <member name="M:Hzdtf.Service.Impl.Standard.ServiceBase`3.AfterRemoveByIds(Hzdtf.Utility.Standard.Model.Return.ReturnInfo{System.Boolean},`0[],System.String@,Hzdtf.Utility.Standard.Model.BasicUserInfo{`0})">
            <summary>
            根据ID集合移除模型后
            </summary>
            <param name="returnInfo">返回信息</param>
            <param name="ids">ID集合</param>
            <param name="connectionId">连接ID</param>
            <param name="currUser">当前用户</param>
            <returns>返回信息</returns>
        </member>
        <member name="M:Hzdtf.Service.Impl.Standard.ServiceBase`3.BeforeClear(Hzdtf.Utility.Standard.Model.Return.ReturnInfo{System.Boolean},System.String@,Hzdtf.Utility.Standard.Model.BasicUserInfo{`0})">
            <summary>
            清空所有模型前
            </summary>
            <param name="returnInfo">返回信息</param>
            <param name="connectionId">连接ID</param>
            <param name="currUser">当前用户</param>
        </member>
        <member name="M:Hzdtf.Service.Impl.Standard.ServiceBase`3.AfterClear(Hzdtf.Utility.Standard.Model.Return.ReturnInfo{System.Boolean},System.String@,Hzdtf.Utility.Standard.Model.BasicUserInfo{`0})">
            <summary>
            清空所有模型后
            </summary>
            <param name="returnInfo">返回信息</param>
            <param name="connectionId">连接ID</param>
            <param name="currUser">当前用户</param>
        </member>
        <member name="M:Hzdtf.Service.Impl.Standard.ServiceBase`3.FindAsync(`0,System.String,Hzdtf.Utility.Standard.Model.BasicUserInfo{`0})">
            <summary>
            异步根据ID查找模型
            </summary>
            <param name="id">ID</param>
            <param name="connectionId">连接ID</param>
            <param name="currUser">当前用户</param>
            <returns>返回信息任务</returns>
        </member>
        <member name="M:Hzdtf.Service.Impl.Standard.ServiceBase`3.FindAsync(`0[],System.String,Hzdtf.Utility.Standard.Model.BasicUserInfo{`0})">
            <summary>
            异步根据ID集合查找模型列表
            </summary>
            <param name="ids">ID集合</param>
            <param name="connectionId">连接ID</param>
            <param name="currUser">当前用户</param>
            <returns>返回信息任务</returns>
        </member>
        <member name="M:Hzdtf.Service.Impl.Standard.ServiceBase`3.ExistsAsync(`0,System.String,Hzdtf.Utility.Standard.Model.BasicUserInfo{`0})">
            <summary>
            异步根据ID判断模型是否存在
            </summary>
            <param name="id">ID</param>
            <param name="connectionId">连接ID</param>
            <param name="currUser">当前用户</param>
            <returns>返回信息任务</returns>
        </member>
        <member name="M:Hzdtf.Service.Impl.Standard.ServiceBase`3.CountAsync(System.String,Hzdtf.Utility.Standard.Model.BasicUserInfo{`0})">
            <summary>
            异步统计模型数
            </summary>
            <param name="connectionId">连接ID</param>
            <param name="currUser">当前用户</param>
            <returns>返回信息任务</returns>
        </member>
        <member name="M:Hzdtf.Service.Impl.Standard.ServiceBase`3.QueryAsync(System.String,Hzdtf.Utility.Standard.Model.BasicUserInfo{`0})">
            <summary>
            异步查询模型列表
            </summary>
            <param name="connectionId">连接ID</param>
            <param name="currUser">当前用户</param>
            <returns>返回信息任务</returns>
        </member>
        <member name="M:Hzdtf.Service.Impl.Standard.ServiceBase`3.QueryPageAsync(System.Int32,System.Int32,Hzdtf.Utility.Standard.Model.FilterInfo,System.String,Hzdtf.Utility.Standard.Model.BasicUserInfo{`0})">
            <summary>
            异步执行查询模型列表并分页
            </summary>
            <param name="pageIndex">页码</param>
            <param name="pageSize">每页记录数</param>
            <param name="filter">筛选</param>
            <param name="connectionId">连接ID</param>
            <param name="currUser">当前用户</param>
            <returns>返回信息任务</returns>
        </member>
        <member name="M:Hzdtf.Service.Impl.Standard.ServiceBase`3.AddAsync(`1,System.String,Hzdtf.Utility.Standard.Model.BasicUserInfo{`0})">
            <summary>
            异步添加模型
            </summary>
            <param name="model">模型</param>
            <param name="connectionId">连接ID</param>
            <param name="currUser">当前用户</param>
            <returns>返回信息任务</returns>
        </member>
        <member name="M:Hzdtf.Service.Impl.Standard.ServiceBase`3.AddAsync(System.Collections.Generic.IList{`1},System.String,Hzdtf.Utility.Standard.Model.BasicUserInfo{`0})">
            <summary>
            异步添加模型列表
            </summary>
            <param name="models">模型列表</param>
            <param name="connectionId">连接ID</param>
            <param name="currUser">当前用户</param>
            <returns>返回信息任务</returns>
        </member>
        <member name="M:Hzdtf.Service.Impl.Standard.ServiceBase`3.SetAsync(`1,System.String,Hzdtf.Utility.Standard.Model.BasicUserInfo{`0})">
            <summary>
            异步设置模型
            如果ID存在则修改，否则添加
            </summary>
            <param name="model">模型</param>
            <param name="connectionId">连接ID</param>
            <param name="currUser">当前用户</param>
            <returns>返回信息任务</returns>
        </member>
        <member name="M:Hzdtf.Service.Impl.Standard.ServiceBase`3.ModifyByIdAsync(`1,System.String,Hzdtf.Utility.Standard.Model.BasicUserInfo{`0})">
            <summary>
            异步根据ID修改模型
            </summary>
            <param name="model">模型</param>
            <param name="connectionId">连接ID</param>
            <param name="currUser">当前用户</param>
            <returns>返回信息任务</returns>
        </member>
        <member name="M:Hzdtf.Service.Impl.Standard.ServiceBase`3.RemoveByIdAsync(`0,System.String,Hzdtf.Utility.Standard.Model.BasicUserInfo{`0})">
            <summary>
            异步根据ID移除模型
            </summary>
            <param name="id">ID</param>
            <param name="connectionId">连接ID</param>
            <param name="currUser">当前用户</param>
            <returns>返回信息任务</returns>
        </member>
        <member name="M:Hzdtf.Service.Impl.Standard.ServiceBase`3.RemoveByIdsAsync(`0[],System.String,Hzdtf.Utility.Standard.Model.BasicUserInfo{`0})">
            <summary>
            异步根据ID集合移除模型
            </summary>
            <param name="ids">ID集合</param>
            <param name="connectionId">连接ID</param>
            <param name="currUser">当前用户</param>
            <returns>返回信息任务</returns>
        </member>
        <member name="M:Hzdtf.Service.Impl.Standard.ServiceBase`3.ClearAsync(System.String,Hzdtf.Utility.Standard.Model.BasicUserInfo{`0})">
            <summary>
            异步清空所有模型
            </summary>
            <param name="connectionId">连接ID</param>
            <param name="currUser">当前用户</param>
            <returns>返回信息任务</returns>
        </member>
    </members>
</doc>
