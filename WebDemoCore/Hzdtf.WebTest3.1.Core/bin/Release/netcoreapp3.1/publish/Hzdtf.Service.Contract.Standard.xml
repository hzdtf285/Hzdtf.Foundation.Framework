<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Hzdtf.Service.Contract.Standard</name>
    </assembly>
    <members>
        <member name="T:Hzdtf.Service.Contract.Standard.IService`1">
            <summary>
            服务接口
            @ 黄振东
            </summary>
            <typeparam name="ModelT">模型类型</typeparam>
        </member>
        <member name="E:Hzdtf.Service.Contract.Standard.IService`1.Finding">
            <summary>
            根据ID查找模型前事件
            </summary>
        </member>
        <member name="M:Hzdtf.Service.Contract.Standard.IService`1.Find(System.Int32,System.String,Hzdtf.Utility.Standard.Model.BasicUserInfo)">
            <summary>
            根据ID查找模型
            </summary>
            <param name="id">ID</param>
            <param name="connectionId">连接ID</param>
            <param name="currUser">当前用户</param>
            <returns>返回信息</returns>
        </member>
        <member name="E:Hzdtf.Service.Contract.Standard.IService`1.Finded">
            <summary>
            根据ID查找模型后事件
            </summary>
        </member>
        <member name="E:Hzdtf.Service.Contract.Standard.IService`1.Findsing">
            <summary>
            根据ID查找模型列表前事件
            </summary>
        </member>
        <member name="M:Hzdtf.Service.Contract.Standard.IService`1.Find(System.Int32[],System.String,Hzdtf.Utility.Standard.Model.BasicUserInfo)">
            <summary>
            根据ID查找模型列表
            </summary>
            <param name="ids">ID集合</param>
            <param name="connectionId">连接ID</param>
            <param name="currUser">当前用户</param>
            <returns>返回信息</returns>
        </member>
        <member name="E:Hzdtf.Service.Contract.Standard.IService`1.Findsed">
            <summary>
            根据ID查找模型列表后事件
            </summary>
        </member>
        <member name="E:Hzdtf.Service.Contract.Standard.IService`1.Existsing">
            <summary>
            根据ID判断模型是否存在前事件
            </summary>
        </member>
        <member name="M:Hzdtf.Service.Contract.Standard.IService`1.Exists(System.Int32,System.String,Hzdtf.Utility.Standard.Model.BasicUserInfo)">
            <summary>
            根据ID判断模型是否存在
            </summary>
            <param name="id">ID</param>
            <param name="connectionId">连接ID</param>
            <param name="currUser">当前用户</param>
            <returns>返回信息</returns>
        </member>
        <member name="E:Hzdtf.Service.Contract.Standard.IService`1.Existsed">
            <summary>
            根据ID判断模型是否存在后事件
            </summary>
        </member>
        <member name="E:Hzdtf.Service.Contract.Standard.IService`1.Counting">
            <summary>
            统计模型数前事件
            </summary>
        </member>
        <member name="M:Hzdtf.Service.Contract.Standard.IService`1.Count(System.String,Hzdtf.Utility.Standard.Model.BasicUserInfo)">
            <summary>
            统计模型数
            </summary>
            <param name="connectionId">连接ID</param>
            <param name="currUser">当前用户</param>
            <returns>返回信息</returns>
        </member>
        <member name="E:Hzdtf.Service.Contract.Standard.IService`1.Counted">
            <summary>
            统计模型数后事件
            </summary>
        </member>
        <member name="E:Hzdtf.Service.Contract.Standard.IService`1.Querying">
            <summary>
            查询模型列表前事件
            </summary>
        </member>
        <member name="M:Hzdtf.Service.Contract.Standard.IService`1.Query(System.String,Hzdtf.Utility.Standard.Model.BasicUserInfo)">
            <summary>
            查询模型列表
            </summary>
            <param name="connectionId">连接ID</param>
            <param name="currUser">当前用户</param>
            <returns>返回信息</returns>
        </member>
        <member name="E:Hzdtf.Service.Contract.Standard.IService`1.Queryed">
            <summary>
            查询模型列表后事件
            </summary>
        </member>
        <member name="E:Hzdtf.Service.Contract.Standard.IService`1.QueryPaging">
            <summary>
            执行查询模型列表并分页前事件
            </summary>
        </member>
        <member name="M:Hzdtf.Service.Contract.Standard.IService`1.QueryPage(System.Int32,System.Int32,Hzdtf.Utility.Standard.Model.FilterInfo,System.String,Hzdtf.Utility.Standard.Model.BasicUserInfo)">
            <summary>
            执行查询模型列表并分页
            </summary>
            <param name="pageIndex">页码</param>
            <param name="pageSize">每页记录数</param>
            <param name="filter">筛选</param>
            <param name="connectionId">连接ID</param>
            <param name="currUser">当前用户</param>
            <returns>返回信息</returns>
        </member>
        <member name="E:Hzdtf.Service.Contract.Standard.IService`1.QueryPaged">
            <summary>
            执行查询模型列表并分页后事件
            </summary>
        </member>
        <member name="E:Hzdtf.Service.Contract.Standard.IService`1.Adding">
            <summary>
            添加模型前事件
            </summary>
        </member>
        <member name="M:Hzdtf.Service.Contract.Standard.IService`1.Add(`0,System.String,Hzdtf.Utility.Standard.Model.BasicUserInfo)">
            <summary>
            添加模型
            </summary>
            <param name="model">模型</param>
            <param name="connectionId">连接ID</param>
            <param name="currUser">当前用户</param>
            <returns>返回信息</returns>
        </member>
        <member name="E:Hzdtf.Service.Contract.Standard.IService`1.Added">
            <summary>
            添加模型后事件
            </summary>
        </member>
        <member name="E:Hzdtf.Service.Contract.Standard.IService`1.Addsing">
            <summary>
            添加模型列表前事件
            </summary>
        </member>
        <member name="M:Hzdtf.Service.Contract.Standard.IService`1.Add(System.Collections.Generic.IList{`0},System.String,Hzdtf.Utility.Standard.Model.BasicUserInfo)">
            <summary>
            添加模型列表
            </summary>
            <param name="models">模型列表</param>
            <param name="connectionId">连接ID</param>
            <param name="currUser">当前用户</param>
            <returns>返回信息</returns>
        </member>
        <member name="E:Hzdtf.Service.Contract.Standard.IService`1.Addsed">
            <summary>
            添加模型列表后事件
            </summary>
        </member>
        <member name="E:Hzdtf.Service.Contract.Standard.IService`1.Seting">
            <summary>
            设置模型前事件
            </summary>
        </member>
        <member name="M:Hzdtf.Service.Contract.Standard.IService`1.Set(`0,System.String,Hzdtf.Utility.Standard.Model.BasicUserInfo)">
            <summary>
            设置模型
            如果ID存在则修改，否则添加
            </summary>
            <param name="model">模型</param>
            <param name="connectionId">连接ID</param>
            <param name="currUser">当前用户</param>
            <returns>返回信息</returns>
        </member>
        <member name="E:Hzdtf.Service.Contract.Standard.IService`1.Seted">
            <summary>
            设置模型后事件
            </summary>
        </member>
        <member name="E:Hzdtf.Service.Contract.Standard.IService`1.ModifyByIding">
            <summary>
            根据ID修改模型前事件
            </summary>
        </member>
        <member name="M:Hzdtf.Service.Contract.Standard.IService`1.ModifyById(`0,System.String,Hzdtf.Utility.Standard.Model.BasicUserInfo)">
            <summary>
            根据ID修改模型
            </summary>
            <param name="model">模型</param>
            <param name="connectionId">连接ID</param>
            <param name="currUser">当前用户</param>
            <returns>返回信息</returns>
        </member>
        <member name="E:Hzdtf.Service.Contract.Standard.IService`1.ModifyByIded">
            <summary>
            根据ID修改模型后事件
            </summary>
        </member>
        <member name="E:Hzdtf.Service.Contract.Standard.IService`1.RemoveByIding">
            <summary>
            根据ID移除模型前事件
            </summary>
        </member>
        <member name="M:Hzdtf.Service.Contract.Standard.IService`1.RemoveById(System.Int32,System.String,Hzdtf.Utility.Standard.Model.BasicUserInfo)">
            <summary>
            根据ID移除模型
            </summary>
            <param name="id">ID</param>
            <param name="connectionId">连接ID</param>
            <param name="currUser">当前用户</param>
            <returns>返回信息</returns>
        </member>
        <member name="E:Hzdtf.Service.Contract.Standard.IService`1.RemoveByIded">
            <summary>
            根据ID移除模型后事件
            </summary>
        </member>
        <member name="E:Hzdtf.Service.Contract.Standard.IService`1.RemoveByIdsing">
            <summary>
            根据ID数组移除模型前事件
            </summary>
        </member>
        <member name="M:Hzdtf.Service.Contract.Standard.IService`1.RemoveByIds(System.Int32[],System.String,Hzdtf.Utility.Standard.Model.BasicUserInfo)">
            <summary>
            根据ID数组移除模型
            </summary>
            <param name="ids">ID数组</param>
            <param name="connectionId">连接ID</param>
            <param name="currUser">当前用户</param>
            <returns>返回信息</returns>
        </member>
        <member name="E:Hzdtf.Service.Contract.Standard.IService`1.RemoveByIdsed">
            <summary>
            根据ID数组移除模型后事件
            </summary>
        </member>
        <member name="E:Hzdtf.Service.Contract.Standard.IService`1.Clearing">
            <summary>
            清空所有模型前事件
            </summary>
        </member>
        <member name="M:Hzdtf.Service.Contract.Standard.IService`1.Clear(System.String,Hzdtf.Utility.Standard.Model.BasicUserInfo)">
            <summary>
            清空所有模型
            </summary>
            <param name="connectionId">连接ID</param>
            <param name="currUser">当前用户</param>
            <returns>返回信息</returns>
        </member>
        <member name="E:Hzdtf.Service.Contract.Standard.IService`1.Cleared">
            <summary>
            清空所有模型后事件
            </summary>
        </member>
        <member name="T:Hzdtf.Service.Contract.Standard.IServiceAsync`1">
            <summary>
            异步服务接口
            @ 黄振东
            </summary>
            <typeparam name="ModelT">模型类型</typeparam>
        </member>
        <member name="M:Hzdtf.Service.Contract.Standard.IServiceAsync`1.FindAsync(System.Int32,System.String,Hzdtf.Utility.Standard.Model.BasicUserInfo)">
            <summary>
            异步根据ID查找模型
            </summary>
            <param name="id">ID</param>
            <param name="connectionId">连接ID</param>
            <param name="currUser">当前用户</param>
            <returns>返回信息任务</returns>
        </member>
        <member name="M:Hzdtf.Service.Contract.Standard.IServiceAsync`1.FindAsync(System.Int32[],System.String,Hzdtf.Utility.Standard.Model.BasicUserInfo)">
            <summary>
            异步根据ID集合查找模型列表
            </summary>
            <param name="ids">ID集合</param>
            <param name="connectionId">连接ID</param>
            <param name="currUser">当前用户</param>
            <returns>返回信息任务</returns>
        </member>
        <member name="M:Hzdtf.Service.Contract.Standard.IServiceAsync`1.ExistsAsync(System.Int32,System.String,Hzdtf.Utility.Standard.Model.BasicUserInfo)">
            <summary>
            异步根据ID判断模型是否存在
            </summary>
            <param name="id">ID</param>
            <param name="connectionId">连接ID</param>
            <param name="currUser">当前用户</param>
            <returns>返回信息任务</returns>
        </member>
        <member name="M:Hzdtf.Service.Contract.Standard.IServiceAsync`1.CountAsync(System.String,Hzdtf.Utility.Standard.Model.BasicUserInfo)">
            <summary>
            异步统计模型数
            </summary>
            <param name="connectionId">连接ID</param>
            <param name="currUser">当前用户</param>
            <returns>返回信息任务</returns>
        </member>
        <member name="M:Hzdtf.Service.Contract.Standard.IServiceAsync`1.QueryAsync(System.String,Hzdtf.Utility.Standard.Model.BasicUserInfo)">
            <summary>
            异步查询模型列表
            </summary>
            <param name="connectionId">连接ID</param>
            <param name="currUser">当前用户</param>
            <returns>返回信息任务</returns>
        </member>
        <member name="M:Hzdtf.Service.Contract.Standard.IServiceAsync`1.QueryPageAsync(System.Int32,System.Int32,Hzdtf.Utility.Standard.Model.FilterInfo,System.String,Hzdtf.Utility.Standard.Model.BasicUserInfo)">
            <summary>
            异步执行查询模型列表并分页
            </summary>
            <param name="pageIndex">页码</param>
            <param name="pageSize">每页记录数</param>
            <param name="filter">筛选</param>
            <param name="connectionId">连接ID</param>
            <param name="currUser">当前用户</param>
            <returns>返回信息任务</returns>
        </member>
        <member name="M:Hzdtf.Service.Contract.Standard.IServiceAsync`1.AddAsync(`0,System.String,Hzdtf.Utility.Standard.Model.BasicUserInfo)">
            <summary>
            异步添加模型
            </summary>
            <param name="model">模型</param>
            <param name="connectionId">连接ID</param>
            <param name="currUser">当前用户</param>
            <returns>返回信息任务</returns>
        </member>
        <member name="M:Hzdtf.Service.Contract.Standard.IServiceAsync`1.AddAsync(System.Collections.Generic.IList{`0},System.String,Hzdtf.Utility.Standard.Model.BasicUserInfo)">
            <summary>
            异步添加模型列表
            </summary>
            <param name="models">模型列表</param>
            <param name="connectionId">连接ID</param>
            <param name="currUser">当前用户</param>
            <returns>返回信息任务</returns>
        </member>
        <member name="M:Hzdtf.Service.Contract.Standard.IServiceAsync`1.SetAsync(`0,System.String,Hzdtf.Utility.Standard.Model.BasicUserInfo)">
            <summary>
            异步设置模型
            如果ID存在则修改，否则添加
            </summary>
            <param name="model">模型</param>
            <param name="connectionId">连接ID</param>
            <param name="currUser">当前用户</param>
            <returns>返回信息任务</returns>
        </member>
        <member name="M:Hzdtf.Service.Contract.Standard.IServiceAsync`1.ModifyByIdAsync(`0,System.String,Hzdtf.Utility.Standard.Model.BasicUserInfo)">
            <summary>
            异步根据ID修改模型
            </summary>
            <param name="model">模型</param>
            <param name="connectionId">连接ID</param>
            <param name="currUser">当前用户</param>
            <returns>返回信息任务</returns>
        </member>
        <member name="M:Hzdtf.Service.Contract.Standard.IServiceAsync`1.RemoveByIdAsync(System.Int32,System.String,Hzdtf.Utility.Standard.Model.BasicUserInfo)">
            <summary>
            异步根据ID移除模型
            </summary>
            <param name="id">ID</param>
            <param name="connectionId">连接ID</param>
            <param name="currUser">当前用户</param>
            <returns>返回信息任务</returns>
        </member>
        <member name="M:Hzdtf.Service.Contract.Standard.IServiceAsync`1.RemoveByIdsAsync(System.Int32[],System.String,Hzdtf.Utility.Standard.Model.BasicUserInfo)">
            <summary>
            异步根据ID数组移除模型
            </summary>
            <param name="ids">ID数组</param>
            <param name="connectionId">连接ID</param>
            <param name="currUser">当前用户</param>
            <returns>返回信息任务</returns>
        </member>
        <member name="M:Hzdtf.Service.Contract.Standard.IServiceAsync`1.ClearAsync(System.String,Hzdtf.Utility.Standard.Model.BasicUserInfo)">
            <summary>
            异步清空所有模型
            </summary>
            <param name="connectionId">连接ID</param>
            <param name="currUser">当前用户</param>
            <returns>返回信息任务</returns>
        </member>
    </members>
</doc>
