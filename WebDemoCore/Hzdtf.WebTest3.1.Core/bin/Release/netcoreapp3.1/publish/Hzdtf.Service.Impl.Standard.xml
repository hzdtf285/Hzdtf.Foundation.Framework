<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Hzdtf.Service.Impl.Standard</name>
    </assembly>
    <members>
        <member name="T:Hzdtf.Service.Impl.Standard.BasicServiceBase">
            <summary>
            基本服务基类
            @ 黄振东
            </summary>
        </member>
        <member name="P:Hzdtf.Service.Impl.Standard.BasicServiceBase.Log">
            <summary>
            日志
            </summary>
        </member>
        <member name="P:Hzdtf.Service.Impl.Standard.BasicServiceBase.AppConfig">
            <summary>
            应用配置
            </summary>
        </member>
        <member name="T:Hzdtf.Service.Impl.Standard.ServiceBase`2">
            <summary>
            服务基类
            @ 黄振东
            </summary>
            <typeparam name="ModelT">模型类型</typeparam>
            <typeparam name="PersistenceT">持久化类型</typeparam>
            <summary>
            服务基类
            @ 黄振东
            </summary>
        </member>
        <member name="P:Hzdtf.Service.Impl.Standard.ServiceBase`2.Persistence">
            <summary>
            持久化
            </summary>
        </member>
        <member name="M:Hzdtf.Service.Impl.Standard.ServiceBase`2.Get">
            <summary>
            获取对象
            </summary>
            <returns>对象</returns>
        </member>
        <member name="E:Hzdtf.Service.Impl.Standard.ServiceBase`2.Finding">
            <summary>
            根据ID查找模型前事件
            </summary>
        </member>
        <member name="M:Hzdtf.Service.Impl.Standard.ServiceBase`2.OnFinding(Hzdtf.Utility.Standard.Model.Return.ReturnInfo{`0},System.Int32,System.String,Hzdtf.Utility.Standard.Model.BasicUserInfo)">
            <summary>
            执行根据ID查找模型前事件
            </summary>
            <param name="returnInfo">返回信息</param>
            <param name="id">ID</param>
            <param name="connectionId">连接ID</param>
            <param name="currUser">当前用户</param>
        </member>
        <member name="E:Hzdtf.Service.Impl.Standard.ServiceBase`2.Finded">
            <summary>
            根据ID查找模型后事件
            </summary>
        </member>
        <member name="M:Hzdtf.Service.Impl.Standard.ServiceBase`2.OnFinded(Hzdtf.Utility.Standard.Model.Return.ReturnInfo{`0},System.Int32,System.String,Hzdtf.Utility.Standard.Model.BasicUserInfo)">
            <summary>
            执行根据ID查找模型后事件
            </summary>
            <param name="returnInfo">返回信息</param>
            <param name="id">ID</param>
            <param name="connectionId">连接ID</param>
            <param name="currUser">当前用户</param>
        </member>
        <member name="M:Hzdtf.Service.Impl.Standard.ServiceBase`2.Find(System.Int32,System.String,Hzdtf.Utility.Standard.Model.BasicUserInfo)">
            <summary>
            根据ID查找模型
            </summary>
            <param name="id">ID</param>
            <param name="connectionId">连接ID</param>
            <param name="currUser">当前用户</param>
            <returns>返回信息</returns>
        </member>
        <member name="E:Hzdtf.Service.Impl.Standard.ServiceBase`2.Findsing">
            <summary>
            根据ID查找模型列表前事件
            </summary>
        </member>
        <member name="M:Hzdtf.Service.Impl.Standard.ServiceBase`2.OnFindsing(Hzdtf.Utility.Standard.Model.Return.ReturnInfo{System.Collections.Generic.IList{`0}},System.Int32[],System.String,Hzdtf.Utility.Standard.Model.BasicUserInfo)">
            <summary>
            执行根据ID查找模型前事件
            </summary>
            <param name="returnInfo">返回信息</param>
            <param name="ids">ID集合</param>
            <param name="connectionId">连接ID</param>
            <param name="currUser">当前用户</param>
        </member>
        <member name="E:Hzdtf.Service.Impl.Standard.ServiceBase`2.Findsed">
            <summary>
            根据ID查找模型列表后事件
            </summary>
        </member>
        <member name="M:Hzdtf.Service.Impl.Standard.ServiceBase`2.OnFindsed(Hzdtf.Utility.Standard.Model.Return.ReturnInfo{System.Collections.Generic.IList{`0}},System.Int32[],System.String,Hzdtf.Utility.Standard.Model.BasicUserInfo)">
            <summary>
            执行根据ID查找模型后事件
            </summary>
            <param name="returnInfo">返回信息</param>
            <param name="ids">ID集合</param>
            <param name="connectionId">连接ID</param>
            <param name="currUser">当前用户</param>
        </member>
        <member name="M:Hzdtf.Service.Impl.Standard.ServiceBase`2.Find(System.Int32[],System.String,Hzdtf.Utility.Standard.Model.BasicUserInfo)">
            <summary>
            根据ID查找模型列表
            </summary>
            <param name="ids">ID集合</param>
            <param name="connectionId">连接ID</param>
            <param name="currUser">当前用户</param>
            <returns>返回信息</returns>
        </member>
        <member name="E:Hzdtf.Service.Impl.Standard.ServiceBase`2.Existsing">
            <summary>
            根据ID判断模型是否存在前事件
            </summary>
        </member>
        <member name="M:Hzdtf.Service.Impl.Standard.ServiceBase`2.OnExistsing(Hzdtf.Utility.Standard.Model.Return.ReturnInfo{System.Boolean},System.Int32,System.String,Hzdtf.Utility.Standard.Model.BasicUserInfo)">
            <summary>
            执行根据ID判断模型是否存在前事件
            </summary>
            <param name="returnInfo">返回信息</param>
            <param name="id">ID</param>
            <param name="connectionId">连接ID</param>
            <param name="currUser">当前用户</param>
        </member>
        <member name="E:Hzdtf.Service.Impl.Standard.ServiceBase`2.Existsed">
            <summary>
            根据ID判断模型是否存在后事件
            </summary>
        </member>
        <member name="M:Hzdtf.Service.Impl.Standard.ServiceBase`2.OnExistsed(Hzdtf.Utility.Standard.Model.Return.ReturnInfo{System.Boolean},System.Int32,System.String,Hzdtf.Utility.Standard.Model.BasicUserInfo)">
            <summary>
            执行根据ID判断模型是否存在后事件
            </summary>
            <param name="returnInfo">返回信息</param>
            <param name="id">ID</param>
            <param name="connectionId">连接ID</param>
            <param name="currUser">当前用户</param>
        </member>
        <member name="M:Hzdtf.Service.Impl.Standard.ServiceBase`2.Exists(System.Int32,System.String,Hzdtf.Utility.Standard.Model.BasicUserInfo)">
            <summary>
            根据ID判断模型是否存在
            </summary>
            <param name="id">ID</param>
            <param name="connectionId">连接ID</param>
            <param name="currUser">当前用户</param>
            <returns>返回信息</returns>
        </member>
        <member name="E:Hzdtf.Service.Impl.Standard.ServiceBase`2.Counting">
            <summary>
            统计模型数前事件
            </summary>
        </member>
        <member name="M:Hzdtf.Service.Impl.Standard.ServiceBase`2.OnCounting(Hzdtf.Utility.Standard.Model.Return.ReturnInfo{System.Int32},System.String,Hzdtf.Utility.Standard.Model.BasicUserInfo)">
            <summary>
            执行统计模型数前事件
            </summary>
            <param name="returnInfo">返回信息</param>
            <param name="connectionId">连接ID</param>
            <param name="currUser">当前用户</param>
        </member>
        <member name="E:Hzdtf.Service.Impl.Standard.ServiceBase`2.Counted">
            <summary>
            统计模型数后事件
            </summary>
        </member>
        <member name="M:Hzdtf.Service.Impl.Standard.ServiceBase`2.OnCounted(Hzdtf.Utility.Standard.Model.Return.ReturnInfo{System.Int32},System.String,Hzdtf.Utility.Standard.Model.BasicUserInfo)">
            <summary>
            执行统计模型数后事件
            </summary>
            <param name="returnInfo">返回信息</param>
            <param name="connectionId">连接ID</param>
            <param name="currUser">当前用户</param>
        </member>
        <member name="M:Hzdtf.Service.Impl.Standard.ServiceBase`2.Count(System.String,Hzdtf.Utility.Standard.Model.BasicUserInfo)">
            <summary>
            统计模型数
            </summary>
            <param name="connectionId">连接ID</param>
            <param name="currUser">当前用户</param>
            <returns>返回信息</returns>
        </member>
        <member name="E:Hzdtf.Service.Impl.Standard.ServiceBase`2.Querying">
            <summary>
            查询模型列表前事件
            </summary>
        </member>
        <member name="M:Hzdtf.Service.Impl.Standard.ServiceBase`2.OnQuerying(Hzdtf.Utility.Standard.Model.Return.ReturnInfo{System.Collections.Generic.IList{`0}},System.String,Hzdtf.Utility.Standard.Model.BasicUserInfo)">
            <summary>
            执行查询模型列表前事件
            </summary>
            <param name="returnInfo">返回信息</param>
            <param name="connectionId">连接ID</param>
            <param name="currUser">当前用户</param>
        </member>
        <member name="E:Hzdtf.Service.Impl.Standard.ServiceBase`2.Queryed">
            <summary>
            查询模型列表后事件
            </summary>
        </member>
        <member name="M:Hzdtf.Service.Impl.Standard.ServiceBase`2.OnQueryed(Hzdtf.Utility.Standard.Model.Return.ReturnInfo{System.Collections.Generic.IList{`0}},System.String,Hzdtf.Utility.Standard.Model.BasicUserInfo)">
            <summary>
            执行查询模型列表后事件
            </summary>
            <param name="returnInfo">返回信息</param>
            <param name="connectionId">连接ID</param>
            <param name="currUser">当前用户</param>
        </member>
        <member name="M:Hzdtf.Service.Impl.Standard.ServiceBase`2.Query(System.String,Hzdtf.Utility.Standard.Model.BasicUserInfo)">
            <summary>
            查询模型列表
            </summary>
            <param name="connectionId">连接ID</param>
            <param name="currUser">当前用户</param>
            <returns>返回信息</returns>
        </member>
        <member name="E:Hzdtf.Service.Impl.Standard.ServiceBase`2.QueryPaging">
            <summary>
            查询模型列表并分页前事件
            </summary>
        </member>
        <member name="M:Hzdtf.Service.Impl.Standard.ServiceBase`2.OnQueryPaging(Hzdtf.Utility.Standard.Model.Return.ReturnInfo{Hzdtf.Utility.Standard.Model.Page.PagingInfo{`0}},System.Int32,System.Int32,Hzdtf.Utility.Standard.Model.FilterInfo,System.String,Hzdtf.Utility.Standard.Model.BasicUserInfo)">
            <summary>
            执行查询模型列表并分页前事件
            </summary>
            <param name="returnInfo">返回信息</param>
            <param name="pageIndex">页码</param>
            <param name="pageSize">每页记录数</param>
            <param name="filter">筛选</param>
            <param name="connectionId">连接ID</param>
            <param name="currUser">当前用户</param>
        </member>
        <member name="E:Hzdtf.Service.Impl.Standard.ServiceBase`2.QueryPaged">
            <summary>
            查询模型列表并分页后事件
            </summary>
        </member>
        <member name="M:Hzdtf.Service.Impl.Standard.ServiceBase`2.OnQueryPaged(Hzdtf.Utility.Standard.Model.Return.ReturnInfo{Hzdtf.Utility.Standard.Model.Page.PagingInfo{`0}},System.Int32,System.Int32,Hzdtf.Utility.Standard.Model.FilterInfo,System.String,Hzdtf.Utility.Standard.Model.BasicUserInfo)">
            <summary>
            执行查询模型列表并分页后事件
            </summary>
            <param name="returnInfo">返回信息</param>
            <param name="pageIndex">页码</param>
            <param name="pageSize">每页记录数</param>
            <param name="filter">筛选</param>
            <param name="connectionId">连接ID</param>
            <param name="currUser">当前用户</param>
        </member>
        <member name="M:Hzdtf.Service.Impl.Standard.ServiceBase`2.QueryPage(System.Int32,System.Int32,Hzdtf.Utility.Standard.Model.FilterInfo,System.String,Hzdtf.Utility.Standard.Model.BasicUserInfo)">
            <summary>
            查询模型列表并分页
            </summary>
            <param name="pageIndex">页码</param>
            <param name="pageSize">每页记录数</param>
            <param name="filter">筛选</param>
            <param name="connectionId">连接ID</param>
            <param name="currUser">当前用户</param>
            <returns>返回信息</returns>
        </member>
        <member name="E:Hzdtf.Service.Impl.Standard.ServiceBase`2.Adding">
            <summary>
            添加模型前事件
            </summary>
        </member>
        <member name="M:Hzdtf.Service.Impl.Standard.ServiceBase`2.OnAdding(Hzdtf.Utility.Standard.Model.Return.ReturnInfo{System.Boolean},`0,System.String,Hzdtf.Utility.Standard.Model.BasicUserInfo)">
            <summary>
            执行模型前事件
            </summary>
            <param name="returnInfo">返回信息</param>
            <param name="model">模型</param>
            <param name="connectionId">连接ID</param>
            <param name="currUser">当前用户</param>
        </member>
        <member name="E:Hzdtf.Service.Impl.Standard.ServiceBase`2.Added">
            <summary>
            添加模型后事件
            </summary>
        </member>
        <member name="M:Hzdtf.Service.Impl.Standard.ServiceBase`2.OnAdded(Hzdtf.Utility.Standard.Model.Return.ReturnInfo{System.Boolean},`0,System.String,Hzdtf.Utility.Standard.Model.BasicUserInfo)">
            <summary>
            执行模型后事件
            </summary>
            <param name="returnInfo">返回信息</param>
            <param name="model">模型</param>
            <param name="connectionId">连接ID</param>
            <param name="currUser">当前用户</param>
        </member>
        <member name="M:Hzdtf.Service.Impl.Standard.ServiceBase`2.Add(`0,System.String,Hzdtf.Utility.Standard.Model.BasicUserInfo)">
            <summary>
            添加模型
            </summary>
            <param name="model">模型</param>
            <param name="connectionId">连接ID</param>
            <param name="currUser">当前用户</param>
            <returns>返回信息</returns>
        </member>
        <member name="E:Hzdtf.Service.Impl.Standard.ServiceBase`2.Addsing">
            <summary>
            添加模型列表前事件
            </summary>
        </member>
        <member name="M:Hzdtf.Service.Impl.Standard.ServiceBase`2.OnAddsing(Hzdtf.Utility.Standard.Model.Return.ReturnInfo{System.Boolean},System.Collections.Generic.IList{`0},System.String,Hzdtf.Utility.Standard.Model.BasicUserInfo)">
            <summary>
            执行模型列表前事件
            </summary>
            <param name="returnInfo">返回信息</param>
            <param name="models">模型列表</param>
            <param name="connectionId">连接ID</param>
            <param name="currUser">当前用户</param>
        </member>
        <member name="E:Hzdtf.Service.Impl.Standard.ServiceBase`2.Addsed">
            <summary>
            添加模型列表后事件
            </summary>
        </member>
        <member name="M:Hzdtf.Service.Impl.Standard.ServiceBase`2.OnAddsed(Hzdtf.Utility.Standard.Model.Return.ReturnInfo{System.Boolean},System.Collections.Generic.IList{`0},System.String,Hzdtf.Utility.Standard.Model.BasicUserInfo)">
            <summary>
            执行模型列表后事件
            </summary>
            <param name="returnInfo">返回信息</param>
            <param name="models">模型列表</param>
            <param name="connectionId">连接ID</param>
            <param name="currUser">当前用户</param>
        </member>
        <member name="M:Hzdtf.Service.Impl.Standard.ServiceBase`2.Add(System.Collections.Generic.IList{`0},System.String,Hzdtf.Utility.Standard.Model.BasicUserInfo)">
            <summary>
            添加模型列表
            </summary>
            <param name="models">模型列表</param>
            <param name="connectionId">连接ID</param>
            <param name="currUser">当前用户</param>
            <returns>返回信息</returns>
        </member>
        <member name="E:Hzdtf.Service.Impl.Standard.ServiceBase`2.Seting">
            <summary>
            设置模型前事件
            </summary>
        </member>
        <member name="M:Hzdtf.Service.Impl.Standard.ServiceBase`2.OnSeting(Hzdtf.Utility.Standard.Model.Return.ReturnInfo{System.Boolean},`0,System.String,Hzdtf.Utility.Standard.Model.BasicUserInfo)">
            <summary>
            执行设置模型前事件
            </summary>
            <param name="returnInfo">返回信息</param>
            <param name="model">模型</param>
            <param name="connectionId">连接ID</param>
            <param name="currUser">当前用户</param>
        </member>
        <member name="E:Hzdtf.Service.Impl.Standard.ServiceBase`2.Seted">
            <summary>
            设置模型后事件
            </summary>
        </member>
        <member name="M:Hzdtf.Service.Impl.Standard.ServiceBase`2.OnSeted(Hzdtf.Utility.Standard.Model.Return.ReturnInfo{System.Boolean},`0,System.String,Hzdtf.Utility.Standard.Model.BasicUserInfo)">
            <summary>
            执行设置模型后事件
            </summary>
            <param name="returnInfo">返回信息</param>
            <param name="model">模型</param>
            <param name="connectionId">连接ID</param>
            <param name="currUser">当前用户</param>
        </member>
        <member name="M:Hzdtf.Service.Impl.Standard.ServiceBase`2.Set(`0,System.String,Hzdtf.Utility.Standard.Model.BasicUserInfo)">
            <summary>
            设置模型
            如果ID存在则修改，否则添加
            </summary>
            <param name="model">模型</param>
            <param name="connectionId">连接ID</param>
            <param name="currUser">当前用户</param>
            <returns>返回信息</returns>
        </member>
        <member name="E:Hzdtf.Service.Impl.Standard.ServiceBase`2.ModifyByIding">
            <summary>
            根据ID修改模型前事件
            </summary>
        </member>
        <member name="M:Hzdtf.Service.Impl.Standard.ServiceBase`2.OnModifyByIding(Hzdtf.Utility.Standard.Model.Return.ReturnInfo{System.Boolean},`0,System.String,Hzdtf.Utility.Standard.Model.BasicUserInfo)">
            <summary>
            执行根据ID修改模型前事件
            </summary>
            <param name="returnInfo">返回信息</param>
            <param name="model">模型</param>
            <param name="connectionId">连接ID</param>
            <param name="currUser">当前用户</param>
        </member>
        <member name="E:Hzdtf.Service.Impl.Standard.ServiceBase`2.ModifyByIded">
            <summary>
            根据ID修改模型后事件
            </summary>
        </member>
        <member name="M:Hzdtf.Service.Impl.Standard.ServiceBase`2.OnModifyByIded(Hzdtf.Utility.Standard.Model.Return.ReturnInfo{System.Boolean},`0,System.String,Hzdtf.Utility.Standard.Model.BasicUserInfo)">
            <summary>
            执行根据ID修改模型后事件
            </summary>
            <param name="returnInfo">返回信息</param>
            <param name="model">模型</param>
            <param name="connectionId">连接ID</param>
            <param name="currUser">当前用户</param>
        </member>
        <member name="M:Hzdtf.Service.Impl.Standard.ServiceBase`2.ModifyById(`0,System.String,Hzdtf.Utility.Standard.Model.BasicUserInfo)">
            <summary>
            根据ID修改模型
            </summary>
            <param name="model">模型</param>
            <param name="connectionId">连接ID</param>
            <param name="currUser">当前用户</param>
            <returns>返回信息</returns>
        </member>
        <member name="E:Hzdtf.Service.Impl.Standard.ServiceBase`2.RemoveByIding">
            <summary>
            根据ID移除模型前事件
            </summary>
        </member>
        <member name="M:Hzdtf.Service.Impl.Standard.ServiceBase`2.OnRemoveByIding(Hzdtf.Utility.Standard.Model.Return.ReturnInfo{System.Boolean},System.Int32,System.String,Hzdtf.Utility.Standard.Model.BasicUserInfo)">
            <summary>
            执行根据ID移除模型前事件
            </summary>
            <param name="returnInfo">返回信息</param>
            <param name="id">ID</param>
            <param name="connectionId">连接ID</param>
            <param name="currUser">当前用户</param>
        </member>
        <member name="E:Hzdtf.Service.Impl.Standard.ServiceBase`2.RemoveByIded">
            <summary>
            根据ID移除模型后事件
            </summary>
        </member>
        <member name="M:Hzdtf.Service.Impl.Standard.ServiceBase`2.OnRemoveByIded(Hzdtf.Utility.Standard.Model.Return.ReturnInfo{System.Boolean},System.Int32,System.String,Hzdtf.Utility.Standard.Model.BasicUserInfo)">
            <summary>
            执行根据ID移除模型后事件
            </summary>
            <param name="returnInfo">返回信息</param>
            <param name="id">ID</param>
            <param name="connectionId">连接ID</param>
            <param name="currUser">当前用户</param>
        </member>
        <member name="M:Hzdtf.Service.Impl.Standard.ServiceBase`2.RemoveById(System.Int32,System.String,Hzdtf.Utility.Standard.Model.BasicUserInfo)">
            <summary>
            根据ID移除模型
            </summary>
            <param name="id">ID</param>
            <param name="connectionId">连接ID</param>
            <param name="currUser">当前用户</param>
            <returns>返回信息</returns>
        </member>
        <member name="E:Hzdtf.Service.Impl.Standard.ServiceBase`2.RemoveByIdsing">
            <summary>
            根据ID数组移除模型前事件
            </summary>
        </member>
        <member name="M:Hzdtf.Service.Impl.Standard.ServiceBase`2.OnRemoveByIdsing(Hzdtf.Utility.Standard.Model.Return.ReturnInfo{System.Boolean},System.Int32[],System.String,Hzdtf.Utility.Standard.Model.BasicUserInfo)">
            <summary>
            执行根据ID数组移除模型前事件
            </summary>
            <param name="returnInfo">返回信息</param>
            <param name="ids">ID集合</param>
            <param name="connectionId">连接ID</param>
            <param name="currUser">当前用户</param>
        </member>
        <member name="E:Hzdtf.Service.Impl.Standard.ServiceBase`2.RemoveByIdsed">
            <summary>
            根据ID数组移除模型后事件
            </summary>
        </member>
        <member name="M:Hzdtf.Service.Impl.Standard.ServiceBase`2.OnRemoveByIdsed(Hzdtf.Utility.Standard.Model.Return.ReturnInfo{System.Boolean},System.Int32[],System.String,Hzdtf.Utility.Standard.Model.BasicUserInfo)">
            <summary>
            执行根据ID数组移除模型后事件
            </summary>
            <param name="returnInfo">返回信息</param>
            <param name="ids">ID集合</param>
            <param name="connectionId">连接ID</param>
            <param name="currUser">当前用户</param>
        </member>
        <member name="M:Hzdtf.Service.Impl.Standard.ServiceBase`2.RemoveByIds(System.Int32[],System.String,Hzdtf.Utility.Standard.Model.BasicUserInfo)">
            <summary>
            根据ID数组移除模型
            </summary>
            <param name="ids">ID集合</param>
            <param name="connectionId">连接ID</param>
            <param name="currUser">当前用户</param>
            <returns>返回信息</returns>
        </member>
        <member name="E:Hzdtf.Service.Impl.Standard.ServiceBase`2.Clearing">
            <summary>
            清空所有模型前事件
            </summary>
        </member>
        <member name="M:Hzdtf.Service.Impl.Standard.ServiceBase`2.OnClearing(Hzdtf.Utility.Standard.Model.Return.ReturnInfo{System.Boolean},System.String,Hzdtf.Utility.Standard.Model.BasicUserInfo)">
            <summary>
            执行清空所有模型前事件
            </summary>
            <param name="returnInfo">返回信息</param>
            <param name="connectionId">连接ID</param>
            <param name="currUser">当前用户</param>
        </member>
        <member name="E:Hzdtf.Service.Impl.Standard.ServiceBase`2.Cleared">
            <summary>
            清空所有模型后事件
            </summary>
        </member>
        <member name="M:Hzdtf.Service.Impl.Standard.ServiceBase`2.OnCleared(Hzdtf.Utility.Standard.Model.Return.ReturnInfo{System.Boolean},System.String,Hzdtf.Utility.Standard.Model.BasicUserInfo)">
            <summary>
            执行清空所有模型后事件
            </summary>
            <param name="returnInfo">返回信息</param>
            <param name="connectionId">连接ID</param>
            <param name="currUser">当前用户</param>
        </member>
        <member name="M:Hzdtf.Service.Impl.Standard.ServiceBase`2.Clear(System.String,Hzdtf.Utility.Standard.Model.BasicUserInfo)">
            <summary>
            清空所有模型
            </summary>
            <param name="connectionId">连接ID</param>
            <param name="currUser">当前用户</param>
            <returns>返回信息</returns>
        </member>
        <member name="M:Hzdtf.Service.Impl.Standard.ServiceBase`2.ExecReturnFuncAndConnectionId``1(System.Func{Hzdtf.Utility.Standard.Model.Return.ReturnInfo{``0},System.String,``0},Hzdtf.Utility.Standard.Model.Return.ReturnInfo{``0},System.String,Hzdtf.Utility.Standard.Enums.AccessMode)">
            <summary>
            执行返回函数且带有连接ID
            </summary>
            <typeparam name="OutT">输出类型</typeparam>
            <param name="func">函数</param>
            <param name="returnInfo">返回信息</param>
            <param name="connectionId">连接ID</param>
            <param name="accessMode">访问模式</param>
            <returns>返回信息</returns>
        </member>
        <member name="M:Hzdtf.Service.Impl.Standard.ServiceBase`2.ExecReturnFunc``1(System.Func{Hzdtf.Utility.Standard.Model.Return.ReturnInfo{``0},``0},Hzdtf.Utility.Standard.Model.Return.ReturnInfo{``0})">
            <summary>
            执行返回函数
            </summary>
            <typeparam name="OutT">输出类型</typeparam>
            <param name="func">函数</param>
            <param name="returnInfo">返回信息</param>
            <returns>返回信息</returns>
        </member>
        <member name="M:Hzdtf.Service.Impl.Standard.ServiceBase`2.ExecProcConnectionId(System.Action{System.String},System.String,Hzdtf.Utility.Standard.Enums.AccessMode)">
            <summary>
            执行连接ID过程
            如果传过来的连接ID为空，则会创建新的连接ID，结束后会自动注释连接ID，否则不会
            </summary>
            <param name="action">动作</param>
            <param name="connectionId">连接ID</param>
            <param name="accessMode">访问模式</param>
        </member>
        <member name="M:Hzdtf.Service.Impl.Standard.ServiceBase`2.SetCreateInfo(`0,Hzdtf.Utility.Standard.Model.BasicUserInfo)">
            <summary>
            设置创建信息
            </summary>
            <param name="model">模型</param>
            <param name="currUser">当前用户</param>
        </member>
        <member name="M:Hzdtf.Service.Impl.Standard.ServiceBase`2.SetModifyInfo(`0,Hzdtf.Utility.Standard.Model.BasicUserInfo)">
            <summary>
            设置修改信息
            </summary>
            <param name="model">模型</param>
            <param name="currUser">当前用户</param>
        </member>
        <member name="M:Hzdtf.Service.Impl.Standard.ServiceBase`2.BeforeFind(Hzdtf.Utility.Standard.Model.Return.ReturnInfo{`0},System.Int32,System.String@,Hzdtf.Utility.Standard.Model.BasicUserInfo)">
            <summary>
            根据ID查找模型前
            </summary>
            <param name="returnInfo">返回信息</param>
            <param name="id">ID</param>
            <param name="connectionId">连接ID</param>
            <param name="currUser">当前用户</param>
        </member>
        <member name="M:Hzdtf.Service.Impl.Standard.ServiceBase`2.AfterFind(Hzdtf.Utility.Standard.Model.Return.ReturnInfo{`0},System.Int32,System.String@,Hzdtf.Utility.Standard.Model.BasicUserInfo)">
            <summary>
            根据ID查找模型后
            </summary>
            <param name="returnInfo">返回信息</param>
            <param name="id">ID</param>
            <param name="connectionId">连接ID</param>
            <param name="currUser">当前用户</param>
        </member>
        <member name="M:Hzdtf.Service.Impl.Standard.ServiceBase`2.BeforeFind(Hzdtf.Utility.Standard.Model.Return.ReturnInfo{System.Collections.Generic.IList{`0}},System.Int32[],System.String@,Hzdtf.Utility.Standard.Model.BasicUserInfo)">
            <summary>
            根据ID集合查找模型列表前
            </summary>
            <param name="returnInfo">返回信息</param>
            <param name="ids">ID集合</param>
            <param name="connectionId">连接ID</param>
            <param name="currUser">当前用户</param>
        </member>
        <member name="M:Hzdtf.Service.Impl.Standard.ServiceBase`2.AfterFind(Hzdtf.Utility.Standard.Model.Return.ReturnInfo{System.Collections.Generic.IList{`0}},System.Int32[],System.String@,Hzdtf.Utility.Standard.Model.BasicUserInfo)">
            <summary>
            根据ID集合查找模型列表后
            </summary>
            <param name="returnInfo">返回信息</param>
            <param name="ids">ID集合</param>
            <param name="connectionId">连接ID</param>
            <param name="currUser">当前用户</param>
        </member>
        <member name="M:Hzdtf.Service.Impl.Standard.ServiceBase`2.BeforeExists(Hzdtf.Utility.Standard.Model.Return.ReturnInfo{System.Boolean},System.Int32,System.String@,Hzdtf.Utility.Standard.Model.BasicUserInfo)">
            <summary>
            根据ID判断模型是否存在前
            </summary>
            <param name="returnInfo">返回信息</param>
            <param name="id">ID</param>
            <param name="connectionId">连接ID</param>
            <param name="currUser">当前用户</param>
        </member>
        <member name="M:Hzdtf.Service.Impl.Standard.ServiceBase`2.AfterExists(Hzdtf.Utility.Standard.Model.Return.ReturnInfo{System.Boolean},System.Int32,System.String@,Hzdtf.Utility.Standard.Model.BasicUserInfo)">
            <summary>
            根据ID判断模型是否存在后
            </summary>
            <param name="returnInfo">返回信息</param>
            <param name="id">ID</param>
            <param name="connectionId">连接ID</param>
            <param name="currUser">当前用户</param>
        </member>
        <member name="M:Hzdtf.Service.Impl.Standard.ServiceBase`2.BeforeCount(Hzdtf.Utility.Standard.Model.Return.ReturnInfo{System.Int32},System.String@,Hzdtf.Utility.Standard.Model.BasicUserInfo)">
            <summary>
            统计模型数前
            </summary>
            <param name="returnInfo">返回信息</param>
            <param name="connectionId">连接ID</param>
            <param name="currUser">当前用户</param>
            <returns>返回信息</returns>
        </member>
        <member name="M:Hzdtf.Service.Impl.Standard.ServiceBase`2.AfterCount(Hzdtf.Utility.Standard.Model.Return.ReturnInfo{System.Int32},System.String@,Hzdtf.Utility.Standard.Model.BasicUserInfo)">
            <summary>
            统计模型数后
            </summary>
            <param name="returnInfo">返回信息</param>
            <param name="connectionId">连接ID</param>
            <param name="currUser">当前用户</param>
        </member>
        <member name="M:Hzdtf.Service.Impl.Standard.ServiceBase`2.BeforeQuery(Hzdtf.Utility.Standard.Model.Return.ReturnInfo{System.Collections.Generic.IList{`0}},System.String@,Hzdtf.Utility.Standard.Model.BasicUserInfo)">
            <summary>
            查询模型列表前
            </summary>
            <param name="returnInfo">返回信息</param>
            <param name="connectionId">连接ID</param>
            <param name="currUser">当前用户</param>
        </member>
        <member name="M:Hzdtf.Service.Impl.Standard.ServiceBase`2.AfterQuery(Hzdtf.Utility.Standard.Model.Return.ReturnInfo{System.Collections.Generic.IList{`0}},System.String@,Hzdtf.Utility.Standard.Model.BasicUserInfo)">
            <summary>
            查询模型列表后
            </summary>
            <param name="returnInfo">返回信息</param>
            <param name="connectionId">连接ID</param>
            <param name="currUser">当前用户</param>
        </member>
        <member name="M:Hzdtf.Service.Impl.Standard.ServiceBase`2.BeforeQueryPage(Hzdtf.Utility.Standard.Model.Return.ReturnInfo{Hzdtf.Utility.Standard.Model.Page.PagingInfo{`0}},System.Int32,System.Int32,System.String@,Hzdtf.Utility.Standard.Model.FilterInfo,Hzdtf.Utility.Standard.Model.BasicUserInfo)">
            <summary>
            执行查询模型列表并分页前
            </summary>
            <param name="returnInfo">返回信息</param>
            <param name="pageIndex">页码</param>
            <param name="pageSize">每页记录数</param>
            <param name="connectionId">连接ID</param>
            <param name="filter">筛选</param>
            <param name="currUser">当前用户</param>
        </member>
        <member name="M:Hzdtf.Service.Impl.Standard.ServiceBase`2.AfterQueryPage(Hzdtf.Utility.Standard.Model.Return.ReturnInfo{Hzdtf.Utility.Standard.Model.Page.PagingInfo{`0}},System.Int32,System.Int32,System.String@,Hzdtf.Utility.Standard.Model.FilterInfo,Hzdtf.Utility.Standard.Model.BasicUserInfo)">
            <summary>
            执行查询模型列表并分页后
            </summary>
            <param name="returnInfo">返回信息</param>
            <param name="pageIndex">页码</param>
            <param name="pageSize">每页记录数</param>
            <param name="connectionId">连接ID</param>
            <param name="filter">筛选</param>
            <param name="currUser">当前用户</param>
        </member>
        <member name="M:Hzdtf.Service.Impl.Standard.ServiceBase`2.BeforeAdd(Hzdtf.Utility.Standard.Model.Return.ReturnInfo{System.Boolean},`0,System.String@,Hzdtf.Utility.Standard.Model.BasicUserInfo)">
            <summary>
            添加模型前
            </summary>
            <param name="returnInfo">返回信息</param>
            <param name="model">模型</param>
            <param name="connectionId">连接ID</param>
            <param name="currUser">当前用户</param>
        </member>
        <member name="M:Hzdtf.Service.Impl.Standard.ServiceBase`2.AfterAdd(Hzdtf.Utility.Standard.Model.Return.ReturnInfo{System.Boolean},`0,System.String@,Hzdtf.Utility.Standard.Model.BasicUserInfo)">
            <summary>
            添加模型后
            </summary>
            <param name="returnInfo">返回信息</param>
            <param name="model">模型</param>
            <param name="connectionId">连接ID</param>
            <param name="currUser">当前用户</param>
        </member>
        <member name="M:Hzdtf.Service.Impl.Standard.ServiceBase`2.BeforeAdd(Hzdtf.Utility.Standard.Model.Return.ReturnInfo{System.Boolean},System.Collections.Generic.IList{`0},System.String@,Hzdtf.Utility.Standard.Model.BasicUserInfo)">
            <summary>
            添加模型列表前
            </summary>
            <param name="returnInfo">返回信息</param>
            <param name="models">模型列表</param>
            <param name="connectionId">连接ID</param>
            <param name="currUser">当前用户</param>
        </member>
        <member name="M:Hzdtf.Service.Impl.Standard.ServiceBase`2.AfterAdd(Hzdtf.Utility.Standard.Model.Return.ReturnInfo{System.Boolean},System.Collections.Generic.IList{`0},System.String@,Hzdtf.Utility.Standard.Model.BasicUserInfo)">
            <summary>
            添加模型列表后
            </summary>
            <param name="returnInfo">返回信息</param>
            <param name="models">模型列表</param>
            <param name="connectionId">连接ID</param>
            <param name="currUser">当前用户</param>
        </member>
        <member name="M:Hzdtf.Service.Impl.Standard.ServiceBase`2.BeforeSet(Hzdtf.Utility.Standard.Model.Return.ReturnInfo{System.Boolean},`0,System.String@,Hzdtf.Utility.Standard.Model.BasicUserInfo)">
            <summary>
            设置模型前
            </summary>
            <param name="returnInfo">返回信息</param>
            <param name="model">模型</param>
            <param name="connectionId">连接ID</param>
            <param name="currUser">当前用户</param>
        </member>
        <member name="M:Hzdtf.Service.Impl.Standard.ServiceBase`2.AfterSet(Hzdtf.Utility.Standard.Model.Return.ReturnInfo{System.Boolean},`0,System.String@,Hzdtf.Utility.Standard.Model.BasicUserInfo)">
            <summary>
            设置模型后
            </summary>
            <param name="returnInfo">返回信息</param>
            <param name="model">模型</param>
            <param name="connectionId">连接ID</param>
            <param name="currUser">当前用户</param>
        </member>
        <member name="M:Hzdtf.Service.Impl.Standard.ServiceBase`2.BeforeModifyById(Hzdtf.Utility.Standard.Model.Return.ReturnInfo{System.Boolean},`0,System.String@,Hzdtf.Utility.Standard.Model.BasicUserInfo)">
            <summary>
            根据ID修改模型前
            </summary>
            <param name="returnInfo">返回信息</param>
            <param name="model">模型</param>
            <param name="connectionId">连接ID</param>
            <param name="currUser">当前用户</param>
        </member>
        <member name="M:Hzdtf.Service.Impl.Standard.ServiceBase`2.AfterModifyById(Hzdtf.Utility.Standard.Model.Return.ReturnInfo{System.Boolean},`0,System.String@,Hzdtf.Utility.Standard.Model.BasicUserInfo)">
            <summary>
            根据ID修改模型后
            </summary>
            <param name="returnInfo">返回信息</param>
            <param name="model">模型</param>
            <param name="connectionId">连接ID</param>
            <param name="currUser">当前用户</param>
        </member>
        <member name="M:Hzdtf.Service.Impl.Standard.ServiceBase`2.BeforeRemoveById(Hzdtf.Utility.Standard.Model.Return.ReturnInfo{System.Boolean},System.Int32,System.String@,Hzdtf.Utility.Standard.Model.BasicUserInfo)">
            <summary>
            根据ID移除模型前
            </summary>
            <param name="returnInfo">返回信息</param>
            <param name="id">ID</param>
            <param name="connectionId">连接ID</param>
            <param name="currUser">当前用户</param>
            <returns>返回信息</returns>
        </member>
        <member name="M:Hzdtf.Service.Impl.Standard.ServiceBase`2.AfterRemoveById(Hzdtf.Utility.Standard.Model.Return.ReturnInfo{System.Boolean},System.Int32,System.String@,Hzdtf.Utility.Standard.Model.BasicUserInfo)">
            <summary>
            根据ID移除模型后
            </summary>
            <param name="returnInfo">返回信息</param>
            <param name="id">ID</param>
            <param name="connectionId">连接ID</param>
            <param name="currUser">当前用户</param>
            <returns>返回信息</returns>
        </member>
        <member name="M:Hzdtf.Service.Impl.Standard.ServiceBase`2.BeforeRemoveByIds(Hzdtf.Utility.Standard.Model.Return.ReturnInfo{System.Boolean},System.Int32[],System.String@,Hzdtf.Utility.Standard.Model.BasicUserInfo)">
            <summary>
            根据ID集合移除模型前
            </summary>
            <param name="returnInfo">返回信息</param>
            <param name="ids">ID集合</param>
            <param name="connectionId">连接ID</param>
            <param name="currUser">当前用户</param>
            <returns>返回信息</returns>
        </member>
        <member name="M:Hzdtf.Service.Impl.Standard.ServiceBase`2.AfterRemoveByIds(Hzdtf.Utility.Standard.Model.Return.ReturnInfo{System.Boolean},System.Int32[],System.String@,Hzdtf.Utility.Standard.Model.BasicUserInfo)">
            <summary>
            根据ID集合移除模型后
            </summary>
            <param name="returnInfo">返回信息</param>
            <param name="ids">ID集合</param>
            <param name="connectionId">连接ID</param>
            <param name="currUser">当前用户</param>
            <returns>返回信息</returns>
        </member>
        <member name="M:Hzdtf.Service.Impl.Standard.ServiceBase`2.BeforeClear(Hzdtf.Utility.Standard.Model.Return.ReturnInfo{System.Boolean},System.String@,Hzdtf.Utility.Standard.Model.BasicUserInfo)">
            <summary>
            清空所有模型前
            </summary>
            <param name="returnInfo">返回信息</param>
            <param name="connectionId">连接ID</param>
            <param name="currUser">当前用户</param>
        </member>
        <member name="M:Hzdtf.Service.Impl.Standard.ServiceBase`2.AfterClear(Hzdtf.Utility.Standard.Model.Return.ReturnInfo{System.Boolean},System.String@,Hzdtf.Utility.Standard.Model.BasicUserInfo)">
            <summary>
            清空所有模型后
            </summary>
            <param name="returnInfo">返回信息</param>
            <param name="connectionId">连接ID</param>
            <param name="currUser">当前用户</param>
        </member>
        <member name="M:Hzdtf.Service.Impl.Standard.ServiceBase`2.FindAsync(System.Int32,System.String,Hzdtf.Utility.Standard.Model.BasicUserInfo)">
            <summary>
            异步根据ID查找模型
            </summary>
            <param name="id">ID</param>
            <param name="connectionId">连接ID</param>
            <param name="currUser">当前用户</param>
            <returns>返回信息任务</returns>
        </member>
        <member name="M:Hzdtf.Service.Impl.Standard.ServiceBase`2.FindAsync(System.Int32[],System.String,Hzdtf.Utility.Standard.Model.BasicUserInfo)">
            <summary>
            异步根据ID集合查找模型列表
            </summary>
            <param name="ids">ID集合</param>
            <param name="connectionId">连接ID</param>
            <param name="currUser">当前用户</param>
            <returns>返回信息任务</returns>
        </member>
        <member name="M:Hzdtf.Service.Impl.Standard.ServiceBase`2.ExistsAsync(System.Int32,System.String,Hzdtf.Utility.Standard.Model.BasicUserInfo)">
            <summary>
            异步根据ID判断模型是否存在
            </summary>
            <param name="id">ID</param>
            <param name="connectionId">连接ID</param>
            <param name="currUser">当前用户</param>
            <returns>返回信息任务</returns>
        </member>
        <member name="M:Hzdtf.Service.Impl.Standard.ServiceBase`2.CountAsync(System.String,Hzdtf.Utility.Standard.Model.BasicUserInfo)">
            <summary>
            异步统计模型数
            </summary>
            <param name="connectionId">连接ID</param>
            <param name="currUser">当前用户</param>
            <returns>返回信息任务</returns>
        </member>
        <member name="M:Hzdtf.Service.Impl.Standard.ServiceBase`2.QueryAsync(System.String,Hzdtf.Utility.Standard.Model.BasicUserInfo)">
            <summary>
            异步查询模型列表
            </summary>
            <param name="connectionId">连接ID</param>
            <param name="currUser">当前用户</param>
            <returns>返回信息任务</returns>
        </member>
        <member name="M:Hzdtf.Service.Impl.Standard.ServiceBase`2.QueryPageAsync(System.Int32,System.Int32,Hzdtf.Utility.Standard.Model.FilterInfo,System.String,Hzdtf.Utility.Standard.Model.BasicUserInfo)">
            <summary>
            异步执行查询模型列表并分页
            </summary>
            <param name="pageIndex">页码</param>
            <param name="pageSize">每页记录数</param>
            <param name="filter">筛选</param>
            <param name="connectionId">连接ID</param>
            <param name="currUser">当前用户</param>
            <returns>返回信息任务</returns>
        </member>
        <member name="M:Hzdtf.Service.Impl.Standard.ServiceBase`2.AddAsync(`0,System.String,Hzdtf.Utility.Standard.Model.BasicUserInfo)">
            <summary>
            异步添加模型
            </summary>
            <param name="model">模型</param>
            <param name="connectionId">连接ID</param>
            <param name="currUser">当前用户</param>
            <returns>返回信息任务</returns>
        </member>
        <member name="M:Hzdtf.Service.Impl.Standard.ServiceBase`2.AddAsync(System.Collections.Generic.IList{`0},System.String,Hzdtf.Utility.Standard.Model.BasicUserInfo)">
            <summary>
            异步添加模型列表
            </summary>
            <param name="models">模型列表</param>
            <param name="connectionId">连接ID</param>
            <param name="currUser">当前用户</param>
            <returns>返回信息任务</returns>
        </member>
        <member name="M:Hzdtf.Service.Impl.Standard.ServiceBase`2.SetAsync(`0,System.String,Hzdtf.Utility.Standard.Model.BasicUserInfo)">
            <summary>
            异步设置模型
            如果ID存在则修改，否则添加
            </summary>
            <param name="model">模型</param>
            <param name="connectionId">连接ID</param>
            <param name="currUser">当前用户</param>
            <returns>返回信息任务</returns>
        </member>
        <member name="M:Hzdtf.Service.Impl.Standard.ServiceBase`2.ModifyByIdAsync(`0,System.String,Hzdtf.Utility.Standard.Model.BasicUserInfo)">
            <summary>
            异步根据ID修改模型
            </summary>
            <param name="model">模型</param>
            <param name="connectionId">连接ID</param>
            <param name="currUser">当前用户</param>
            <returns>返回信息任务</returns>
        </member>
        <member name="M:Hzdtf.Service.Impl.Standard.ServiceBase`2.RemoveByIdAsync(System.Int32,System.String,Hzdtf.Utility.Standard.Model.BasicUserInfo)">
            <summary>
            异步根据ID移除模型
            </summary>
            <param name="id">ID</param>
            <param name="connectionId">连接ID</param>
            <param name="currUser">当前用户</param>
            <returns>返回信息任务</returns>
        </member>
        <member name="M:Hzdtf.Service.Impl.Standard.ServiceBase`2.RemoveByIdsAsync(System.Int32[],System.String,Hzdtf.Utility.Standard.Model.BasicUserInfo)">
            <summary>
            异步根据ID集合移除模型
            </summary>
            <param name="ids">ID集合</param>
            <param name="connectionId">连接ID</param>
            <param name="currUser">当前用户</param>
            <returns>返回信息任务</returns>
        </member>
        <member name="M:Hzdtf.Service.Impl.Standard.ServiceBase`2.ClearAsync(System.String,Hzdtf.Utility.Standard.Model.BasicUserInfo)">
            <summary>
            异步清空所有模型
            </summary>
            <param name="connectionId">连接ID</param>
            <param name="currUser">当前用户</param>
            <returns>返回信息任务</returns>
        </member>
    </members>
</doc>
